{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          try {\n            // 这里应该调用API进行登录\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            this.$message.success('登录成功');\n            this.$router.push('/');\n          } catch (error) {\n            this.$message.error('登录失败：' + error.message);\n          } finally {\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","username","password","rules","required","message","trigger","loading","methods","handleLogin","$refs","validate","valid","Promise","resolve","setTimeout","$message","success","$router","push","error"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <el-card class=\"login-card\">\r\n        <div slot=\"header\">\r\n          <h2>智能充电桩系统 - 管理员登录</h2>\r\n        </div>\r\n        <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\" label-width=\"80px\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input v-model=\"loginForm.username\" placeholder=\"请输入管理员用户名\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"请输入密码\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\">登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Login',\r\n    data() {\r\n      return {\r\n        loginForm: {\r\n          username: '',\r\n          password: ''\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' }\r\n          ]\r\n        },\r\n        loading: false\r\n      }\r\n    },\r\n    methods: {\r\n      handleLogin() {\r\n        this.$refs.loginForm.validate(async valid => {\r\n          if (valid) {\r\n            this.loading = true\r\n            try {\r\n              // 这里应该调用API进行登录\r\n              await new Promise(resolve => setTimeout(resolve, 1000))\r\n              this.$message.success('登录成功')\r\n              this.$router.push('/')\r\n            } catch (error) {\r\n              this.$message.error('登录失败：' + error.message)\r\n            } finally {\r\n              this.loading = false\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f5f7fa;\r\n  }\r\n  .login-card {\r\n    width: 400px;\r\n  }\r\n  </style>"],"mappings":"AAsBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAV,SAAA,CAAAW,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAL,OAAA;UACA;YACA;YACA,UAAAM,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;YACA,KAAAE,QAAA,CAAAC,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,SAAAC,KAAA;YACA,KAAAJ,QAAA,CAAAI,KAAA,WAAAA,KAAA,CAAAf,OAAA;UACA;YACA,KAAAE,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}