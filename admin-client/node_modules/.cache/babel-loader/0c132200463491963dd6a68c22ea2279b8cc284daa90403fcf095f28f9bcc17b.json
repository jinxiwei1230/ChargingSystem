{"ast":null,"code":"export default {\n  name: 'Users',\n  data() {\n    return {\n      loading: false,\n      searchKeyword: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      users: [],\n      dialogVisible: false,\n      dialogType: 'add',\n      // 'add' or 'edit'\n      userForm: {\n        username: '',\n        password: '',\n        balance: 0\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能小于6位',\n          trigger: 'blur'\n        }],\n        balance: [{\n          required: true,\n          message: '请输入账户余额',\n          trigger: 'blur'\n        }]\n      },\n      submitting: false,\n      rechargeDialogVisible: false,\n      rechargeForm: {\n        amount: 0\n      },\n      rechargeRules: {\n        amount: [{\n          required: true,\n          message: '请输入充值金额',\n          trigger: 'blur'\n        }]\n      },\n      currentUser: null\n    };\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => user.username.toLowerCase().includes(this.searchKeyword.toLowerCase()));\n    }\n  },\n  methods: {\n    handleSearch() {\n      this.currentPage = 1;\n      this.fetchUsers();\n    },\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.fetchUsers();\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchUsers();\n    },\n    async fetchUsers() {\n      this.loading = true;\n      try {\n        // 这里应该调用API获取用户列表\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.users = [{\n          id: 'U001',\n          username: 'user001',\n          registerTime: '2024-03-15 10:00:00',\n          balance: 100.00,\n          status: 'active'\n        }\n        // 更多数据...\n        ];\n        this.total = this.users.length;\n      } catch (error) {\n        this.$message.error('获取用户列表失败：' + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleAdd() {\n      this.dialogType = 'add';\n      this.userForm = {\n        username: '',\n        password: '',\n        balance: 0\n      };\n      this.dialogVisible = true;\n    },\n    handleEdit(row) {\n      this.dialogType = 'edit';\n      this.userForm = {\n        username: row.username,\n        balance: row.balance\n      };\n      this.dialogVisible = true;\n    },\n    handleRecharge(row) {\n      this.currentUser = row;\n      this.rechargeForm.amount = 0;\n      this.rechargeDialogVisible = true;\n    },\n    async handleToggleStatus(row) {\n      try {\n        // 这里应该调用API修改用户状态\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        row.status = row.status === 'active' ? 'disabled' : 'active';\n        this.$message.success('状态修改成功');\n      } catch (error) {\n        this.$message.error('状态修改失败：' + error.message);\n      }\n    },\n    submitForm() {\n      this.$refs.userForm.validate(async valid => {\n        if (valid) {\n          this.submitting = true;\n          try {\n            // 这里应该调用API保存用户信息\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            this.$message.success(this.dialogType === 'add' ? '添加成功' : '修改成功');\n            this.dialogVisible = false;\n            this.fetchUsers();\n          } catch (error) {\n            this.$message.error('操作失败：' + error.message);\n          } finally {\n            this.submitting = false;\n          }\n        }\n      });\n    },\n    submitRecharge() {\n      this.$refs.rechargeForm.validate(async valid => {\n        if (valid) {\n          this.submitting = true;\n          try {\n            // 这里应该调用API进行充值\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            this.currentUser.balance += this.rechargeForm.amount;\n            this.$message.success('充值成功');\n            this.rechargeDialogVisible = false;\n          } catch (error) {\n            this.$message.error('充值失败：' + error.message);\n          } finally {\n            this.submitting = false;\n          }\n        }\n      });\n    }\n  },\n  created() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["name","data","loading","searchKeyword","currentPage","pageSize","total","users","dialogVisible","dialogType","userForm","username","password","balance","rules","required","message","trigger","min","max","submitting","rechargeDialogVisible","rechargeForm","amount","rechargeRules","currentUser","computed","filteredUsers","filter","user","toLowerCase","includes","methods","handleSearch","fetchUsers","handleSizeChange","val","handleCurrentChange","Promise","resolve","setTimeout","id","registerTime","status","length","error","$message","handleAdd","handleEdit","row","handleRecharge","handleToggleStatus","success","submitForm","$refs","validate","valid","submitRecharge","created"],"sources":["src/views/Users.vue"],"sourcesContent":["<template>\r\n    <div class=\"users-container\">\r\n      <el-card>\r\n        <div slot=\"header\" class=\"header\">\r\n          <span>用户管理</span>\r\n          <div class=\"header-actions\">\r\n            <el-input\r\n              v-model=\"searchKeyword\"\r\n              placeholder=\"搜索用户名\"\r\n              style=\"width: 200px; margin-right: 10px\"\r\n              @input=\"handleSearch\">\r\n            </el-input>\r\n            <el-button type=\"primary\" @click=\"handleAdd\">添加用户</el-button>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-table\r\n          :data=\"filteredUsers\"\r\n          style=\"width: 100%\"\r\n          v-loading=\"loading\">\r\n          <el-table-column\r\n            prop=\"id\"\r\n            label=\"用户ID\"\r\n            width=\"100\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"username\"\r\n            label=\"用户名\"\r\n            width=\"150\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"registerTime\"\r\n            label=\"注册时间\"\r\n            width=\"180\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"balance\"\r\n            label=\"账户余额\"\r\n            width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              ¥{{ scope.row.balance }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"status\"\r\n            label=\"状态\"\r\n            width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'danger'\">\r\n                {{ scope.row.status === 'active' ? '正常' : '禁用' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"操作\"\r\n            width=\"250\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"handleEdit(scope.row)\">\r\n                编辑\r\n              </el-button>\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                @click=\"handleRecharge(scope.row)\">\r\n                充值\r\n              </el-button>\r\n              <el-button\r\n                type=\"text\"\r\n                size=\"small\"\r\n                :type=\"scope.row.status === 'active' ? 'danger' : 'success'\"\r\n                @click=\"handleToggleStatus(scope.row)\">\r\n                {{ scope.row.status === 'active' ? '禁用' : '启用' }}\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        \r\n        <div class=\"pagination-container\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </el-card>\r\n  \r\n      <!-- 用户表单对话框 -->\r\n      <el-dialog\r\n        :title=\"dialogType === 'add' ? '添加用户' : '编辑用户'\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"500px\">\r\n        <el-form\r\n          :model=\"userForm\"\r\n          :rules=\"rules\"\r\n          ref=\"userForm\"\r\n          label-width=\"100px\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input v-model=\"userForm.username\" :disabled=\"dialogType === 'edit'\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogType === 'add'\">\r\n            <el-input v-model=\"userForm.password\" type=\"password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"账户余额\" prop=\"balance\">\r\n            <el-input-number v-model=\"userForm.balance\" :min=\"0\" :precision=\"2\"></el-input-number>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">\r\n            确 定\r\n          </el-button>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n      <!-- 充值对话框 -->\r\n      <el-dialog\r\n        title=\"用户充值\"\r\n        :visible.sync=\"rechargeDialogVisible\"\r\n        width=\"400px\">\r\n        <el-form\r\n          :model=\"rechargeForm\"\r\n          :rules=\"rechargeRules\"\r\n          ref=\"rechargeForm\"\r\n          label-width=\"100px\">\r\n          <el-form-item label=\"充值金额\" prop=\"amount\">\r\n            <el-input-number \r\n              v-model=\"rechargeForm.amount\" \r\n              :min=\"0\" \r\n              :precision=\"2\"\r\n              :step=\"100\">\r\n            </el-input-number>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"rechargeDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitRecharge\" :loading=\"submitting\">\r\n            确 定\r\n          </el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Users',\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        searchKeyword: '',\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        users: [],\r\n        dialogVisible: false,\r\n        dialogType: 'add', // 'add' or 'edit'\r\n        userForm: {\r\n          username: '',\r\n          password: '',\r\n          balance: 0\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' },\r\n            { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' },\r\n            { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n          ],\r\n          balance: [\r\n            { required: true, message: '请输入账户余额', trigger: 'blur' }\r\n          ]\r\n        },\r\n        submitting: false,\r\n        rechargeDialogVisible: false,\r\n        rechargeForm: {\r\n          amount: 0\r\n        },\r\n        rechargeRules: {\r\n          amount: [\r\n            { required: true, message: '请输入充值金额', trigger: 'blur' }\r\n          ]\r\n        },\r\n        currentUser: null\r\n      }\r\n    },\r\n    computed: {\r\n      filteredUsers() {\r\n        return this.users.filter(user => \r\n          user.username.toLowerCase().includes(this.searchKeyword.toLowerCase())\r\n        )\r\n      }\r\n    },\r\n    methods: {\r\n      handleSearch() {\r\n        this.currentPage = 1\r\n        this.fetchUsers()\r\n      },\r\n      handleSizeChange(val) {\r\n        this.pageSize = val\r\n        this.fetchUsers()\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.currentPage = val\r\n        this.fetchUsers()\r\n      },\r\n      async fetchUsers() {\r\n        this.loading = true\r\n        try {\r\n          // 这里应该调用API获取用户列表\r\n          await new Promise(resolve => setTimeout(resolve, 1000))\r\n          this.users = [\r\n            {\r\n              id: 'U001',\r\n              username: 'user001',\r\n              registerTime: '2024-03-15 10:00:00',\r\n              balance: 100.00,\r\n              status: 'active'\r\n            }\r\n            // 更多数据...\r\n          ]\r\n          this.total = this.users.length\r\n        } catch (error) {\r\n          this.$message.error('获取用户列表失败：' + error.message)\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      },\r\n      handleAdd() {\r\n        this.dialogType = 'add'\r\n        this.userForm = {\r\n          username: '',\r\n          password: '',\r\n          balance: 0\r\n        }\r\n        this.dialogVisible = true\r\n      },\r\n      handleEdit(row) {\r\n        this.dialogType = 'edit'\r\n        this.userForm = {\r\n          username: row.username,\r\n          balance: row.balance\r\n        }\r\n        this.dialogVisible = true\r\n      },\r\n      handleRecharge(row) {\r\n        this.currentUser = row\r\n        this.rechargeForm.amount = 0\r\n        this.rechargeDialogVisible = true\r\n      },\r\n      async handleToggleStatus(row) {\r\n        try {\r\n          // 这里应该调用API修改用户状态\r\n          await new Promise(resolve => setTimeout(resolve, 1000))\r\n          row.status = row.status === 'active' ? 'disabled' : 'active'\r\n          this.$message.success('状态修改成功')\r\n        } catch (error) {\r\n          this.$message.error('状态修改失败：' + error.message)\r\n        }\r\n      },\r\n      submitForm() {\r\n        this.$refs.userForm.validate(async valid => {\r\n          if (valid) {\r\n            this.submitting = true\r\n            try {\r\n              // 这里应该调用API保存用户信息\r\n              await new Promise(resolve => setTimeout(resolve, 1000))\r\n              this.$message.success(this.dialogType === 'add' ? '添加成功' : '修改成功')\r\n              this.dialogVisible = false\r\n              this.fetchUsers()\r\n            } catch (error) {\r\n              this.$message.error('操作失败：' + error.message)\r\n            } finally {\r\n              this.submitting = false\r\n            }\r\n          }\r\n        })\r\n      },\r\n      submitRecharge() {\r\n        this.$refs.rechargeForm.validate(async valid => {\r\n          if (valid) {\r\n            this.submitting = true\r\n            try {\r\n              // 这里应该调用API进行充值\r\n              await new Promise(resolve => setTimeout(resolve, 1000))\r\n              this.currentUser.balance += this.rechargeForm.amount\r\n              this.$message.success('充值成功')\r\n              this.rechargeDialogVisible = false\r\n            } catch (error) {\r\n              this.$message.error('充值失败：' + error.message)\r\n            } finally {\r\n              this.submitting = false\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchUsers()\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .users-container {\r\n    padding: 20px;\r\n  }\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .header-actions {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    text-align: right;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}