{"ast":null,"code":"import { getAllChargingPiles, powerOnChargingPile, powerOffChargingPile } from '@/api/charge-pile';\nexport default {\n  name: 'ChargingPiles',\n  data() {\n    return {\n      loading: false,\n      chargingPiles: [],\n      dialogVisible: false,\n      dialogTitle: '',\n      form: {\n        type: '',\n        power: 0,\n        status: ''\n      },\n      rules: {\n        type: [{\n          required: true,\n          message: '请选择充电桩类型',\n          trigger: 'change'\n        }],\n        power: [{\n          required: true,\n          message: '请输入功率',\n          trigger: 'blur'\n        }],\n        status: [{\n          required: true,\n          message: '请选择状态',\n          trigger: 'change'\n        }]\n      },\n      submitting: false\n    };\n  },\n  methods: {\n    getStatusType(status) {\n      const types = {\n        'AVAILABLE': 'success',\n        'IN_USE': 'warning',\n        'MAINTENANCE': 'info',\n        'FAULT': 'danger',\n        'OFFLINE': 'info'\n      };\n      return types[status] || 'info';\n    },\n    getStatusText(status) {\n      const texts = {\n        'AVAILABLE': '空闲',\n        'IN_USE': '使用中',\n        'MAINTENANCE': '维护中',\n        'FAULT': '故障',\n        'OFFLINE': '离线'\n      };\n      return texts[status] || '未知';\n    },\n    formatDateTime(dateTimeStr) {\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    },\n    handleAdd() {\n      this.dialogTitle = '添加充电桩';\n      this.form = {\n        type: '',\n        power: 0,\n        status: 'idle'\n      };\n      this.dialogVisible = true;\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑充电桩';\n      this.form = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    handleMaintenance(row) {\n      this.$message.success('开始维护充电桩：' + row.id);\n      // TODO: 这里可以添加调用维护API的逻辑\n    },\n    handleToggleStatus(row) {\n      const newStatus = row.status === 'AVAILABLE' ? 'OFFLINE' : 'AVAILABLE';\n      const action = newStatus === 'AVAILABLE' ? '开启' : '关闭';\n      const apiMethod = newStatus === 'AVAILABLE' ? powerOnChargingPile : powerOffChargingPile;\n      this.$confirm(`确认${action}该充电桩吗？`, '提示', {\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await apiMethod(row.id);\n          if (response.code === 200) {\n            this.$message.success(response.message);\n            // 更新本地状态\n            row.status = newStatus;\n          } else {\n            this.$message.error(response.message || `${action}失败`);\n          }\n        } catch (error) {\n          console.error(`${action}充电桩出错：`, error);\n          this.$message.error(`${action}失败：` + error.message);\n        }\n      }).catch(() => {});\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitting = true;\n          // 这里应该调用API保存充电桩信息\n          setTimeout(() => {\n            this.submitting = false;\n            this.dialogVisible = false;\n            this.$message.success('保存成功');\n          }, 1000);\n        }\n      });\n    },\n    async fetchChargingPiles() {\n      this.loading = true;\n      try {\n        console.log('开始获取充电桩列表');\n        const response = await getAllChargingPiles();\n        console.log('获取到的响应数据：', response);\n        if (response.code === 200) {\n          this.chargingPiles = response.data;\n          console.log('设置充电桩数据：', this.chargingPiles);\n        } else {\n          this.$message.error(response.message || '获取充电桩列表失败');\n        }\n      } catch (error) {\n        console.error('获取充电桩列表出错：', error);\n        this.$message.error('获取充电桩列表失败：' + error.message);\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  created() {\n    this.fetchChargingPiles();\n  }\n};","map":{"version":3,"names":["getAllChargingPiles","powerOnChargingPile","powerOffChargingPile","name","data","loading","chargingPiles","dialogVisible","dialogTitle","form","type","power","status","rules","required","message","trigger","submitting","methods","getStatusType","types","getStatusText","texts","formatDateTime","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","handleAdd","handleEdit","row","handleMaintenance","$message","success","id","handleToggleStatus","newStatus","action","apiMethod","$confirm","then","response","code","error","console","catch","handleSubmit","$refs","validate","valid","setTimeout","fetchChargingPiles","log","created"],"sources":["src/views/ChargingPiles.vue"],"sourcesContent":["<template>\r\n    <div class=\"charging-piles-container\">\r\n      <el-card>\r\n        <div slot=\"header\">\r\n          <span>充电桩管理</span>\r\n          <el-button style=\"float: right\" type=\"primary\" size=\"small\" @click=\"handleAdd\">添加充电桩</el-button>\r\n        </div>\r\n        \r\n        <el-table :data=\"chargingPiles\" v-loading=\"loading\" border>\r\n          <el-table-column prop=\"id\" label=\"充电桩ID\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"type\" label=\"类型\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"scope.row.type === 'FAST' ? 'success' : 'info'\">\r\n                {{ scope.row.type === 'FAST' ? '快充' : '慢充' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"getStatusType(scope.row.status)\">\r\n                {{ getStatusText(scope.row.status) }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"chargingPower\" label=\"充电功率(kW)\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"chargingTimes\" label=\"累计充电次数\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"totalChargingDuration\" label=\"充电总时长(h)\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"totalChargingAmount\" label=\"充电总电量(kWh)\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"updatedAt\" label=\"最后更新时间\" width=\"180\">\r\n            <template slot-scope=\"scope\">\r\n              {{ formatDateTime(scope.row.updatedAt) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"280\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button size=\"mini\" @click=\"handleEdit(scope.row)\" style=\"margin-right: 10px\">编辑</el-button>\r\n              <el-button \r\n                size=\"mini\" \r\n                type=\"warning\" \r\n                @click=\"handleMaintenance(scope.row)\" \r\n                style=\"margin-right: 10px\"\r\n                :disabled=\"scope.row.status !== 'FAULT'\"\r\n              >维护</el-button>\r\n              <el-button \r\n                size=\"mini\" \r\n                :type=\"scope.row.status === 'AVAILABLE' ? 'danger' : 'success'\"\r\n                @click=\"handleToggleStatus(scope.row)\"\r\n                :disabled=\"scope.row.status === 'FAULT'\"\r\n              >{{ scope.row.status === 'AVAILABLE' ? '关闭' : '启动' }}</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n  \r\n      <!-- 添加/编辑充电桩对话框 -->\r\n      <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"500px\">\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"100px\">\r\n          <el-form-item label=\"充电桩类型\" prop=\"type\">\r\n            <el-select v-model=\"form.type\" placeholder=\"请选择充电桩类型\">\r\n              <el-option label=\"快充\" value=\"fast\"></el-option>\r\n              <el-option label=\"慢充\" value=\"slow\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"功率(kW)\" prop=\"power\">\r\n            <el-input-number v-model=\"form.power\" :min=\"1\" :max=\"100\"></el-input-number>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" prop=\"status\">\r\n            <el-select v-model=\"form.status\" placeholder=\"请选择状态\">\r\n              <el-option label=\"空闲\" value=\"idle\"></el-option>\r\n              <el-option label=\"使用中\" value=\"in_use\"></el-option>\r\n              <el-option label=\"维护中\" value=\"maintenance\"></el-option>\r\n              <el-option label=\"故障\" value=\"fault\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">确定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { getAllChargingPiles, powerOnChargingPile, powerOffChargingPile } from '@/api/charge-pile'\r\n\r\n  export default {\r\n    name: 'ChargingPiles',\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        chargingPiles: [],\r\n        dialogVisible: false,\r\n        dialogTitle: '',\r\n        form: {\r\n          type: '',\r\n          power: 0,\r\n          status: ''\r\n        },\r\n        rules: {\r\n          type: [{ required: true, message: '请选择充电桩类型', trigger: 'change' }],\r\n          power: [{ required: true, message: '请输入功率', trigger: 'blur' }],\r\n          status: [{ required: true, message: '请选择状态', trigger: 'change' }]\r\n        },\r\n        submitting: false\r\n      }\r\n    },\r\n    methods: {\r\n      getStatusType(status) {\r\n        const types = {\r\n          'AVAILABLE': 'success',\r\n          'IN_USE': 'warning',\r\n          'MAINTENANCE': 'info',\r\n          'FAULT': 'danger',\r\n          'OFFLINE': 'info'\r\n        }\r\n        return types[status] || 'info'\r\n      },\r\n      getStatusText(status) {\r\n        const texts = {\r\n          'AVAILABLE': '空闲',\r\n          'IN_USE': '使用中',\r\n          'MAINTENANCE': '维护中',\r\n          'FAULT': '故障',\r\n          'OFFLINE': '离线'\r\n        }\r\n        return texts[status] || '未知'\r\n      },\r\n      formatDateTime(dateTimeStr) {\r\n        const date = new Date(dateTimeStr)\r\n        return date.toLocaleString('zh-CN', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit',\r\n          hour12: false\r\n        })\r\n      },\r\n      handleAdd() {\r\n        this.dialogTitle = '添加充电桩'\r\n        this.form = {\r\n          type: '',\r\n          power: 0,\r\n          status: 'idle'\r\n        }\r\n        this.dialogVisible = true\r\n      },\r\n      handleEdit(row) {\r\n        this.dialogTitle = '编辑充电桩'\r\n        this.form = { ...row }\r\n        this.dialogVisible = true\r\n      },\r\n      handleMaintenance(row) {\r\n        this.$message.success('开始维护充电桩：' + row.id)\r\n        // TODO: 这里可以添加调用维护API的逻辑\r\n      },\r\n      handleToggleStatus(row) {\r\n        const newStatus = row.status === 'AVAILABLE' ? 'OFFLINE' : 'AVAILABLE'\r\n        const action = newStatus === 'AVAILABLE' ? '开启' : '关闭'\r\n        const apiMethod = newStatus === 'AVAILABLE' ? powerOnChargingPile : powerOffChargingPile\r\n\r\n        this.$confirm(`确认${action}该充电桩吗？`, '提示', {\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          try {\r\n            const response = await apiMethod(row.id)\r\n            if (response.code === 200) {\r\n              this.$message.success(response.message)\r\n              // 更新本地状态\r\n              row.status = newStatus\r\n            } else {\r\n              this.$message.error(response.message || `${action}失败`)\r\n            }\r\n          } catch (error) {\r\n            console.error(`${action}充电桩出错：`, error)\r\n            this.$message.error(`${action}失败：` + error.message)\r\n          }\r\n        }).catch(() => {})\r\n      },\r\n      handleSubmit() {\r\n        this.$refs.form.validate(valid => {\r\n          if (valid) {\r\n            this.submitting = true\r\n            // 这里应该调用API保存充电桩信息\r\n            setTimeout(() => {\r\n              this.submitting = false\r\n              this.dialogVisible = false\r\n              this.$message.success('保存成功')\r\n            }, 1000)\r\n          }\r\n        })\r\n      },\r\n      async fetchChargingPiles() {\r\n        this.loading = true\r\n        try {\r\n          console.log('开始获取充电桩列表')\r\n          const response = await getAllChargingPiles()\r\n          console.log('获取到的响应数据：', response)\r\n          if (response.code === 200) {\r\n            this.chargingPiles = response.data\r\n            console.log('设置充电桩数据：', this.chargingPiles)\r\n          } else {\r\n            this.$message.error(response.message || '获取充电桩列表失败')\r\n          }\r\n        } catch (error) {\r\n          console.error('获取充电桩列表出错：', error)\r\n          this.$message.error('获取充电桩列表失败：' + error.message)\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchChargingPiles()\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .charging-piles-container {\r\n    padding: 20px;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}