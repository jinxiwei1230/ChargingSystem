{"ast":null,"code":"import { getChargingSystemSummaryReport } from '@/api/tables';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      loading: false,\n      statistics: {\n        monthChargingCount: 0,\n        monthIncome: 0\n      },\n      chargingPiles: [{\n        id: 'A',\n        type: 'fast',\n        status: 'working',\n        currentUser: 'user001',\n        chargedPower: 15.5\n      }, {\n        id: 'B',\n        type: 'fast',\n        status: 'idle'\n      }, {\n        id: 'C',\n        type: 'slow',\n        status: 'working',\n        currentUser: 'user002',\n        chargedPower: 8.2\n      }, {\n        id: 'D',\n        type: 'slow',\n        status: 'fault'\n      }, {\n        id: 'E',\n        type: 'slow',\n        status: 'idle'\n      }],\n      waitingSpots: [{\n        status: 'occupied',\n        waitingUser: 'user003'\n      }, {\n        status: 'empty'\n      }, {\n        status: 'occupied',\n        waitingUser: 'user004'\n      }, {\n        status: 'empty'\n      }, {\n        status: 'empty'\n      }, {\n        status: 'empty'\n      }]\n    };\n  },\n  methods: {\n    getStatusText(status) {\n      const statusMap = {\n        working: '工作中',\n        idle: '空闲',\n        fault: '故障'\n      };\n      return statusMap[status] || status;\n    },\n    handleRepair(pile) {\n      this.$confirm('确认维修该充电桩吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          // 这里应该调用API进行维修\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          pile.status = 'idle';\n          this.$message.success('维修成功');\n        } catch (error) {\n          this.$message.error('维修失败：' + error.message);\n        }\n      }).catch(() => {});\n    },\n    // 获取本月统计数据\n    async fetchMonthlyStatistics() {\n      try {\n        const response = await getChargingSystemSummaryReport({\n          timeType: 'month'\n        });\n        if (response.code === 200 && response.data && response.data.summary) {\n          const summary = response.data.summary;\n          this.statistics.monthChargingCount = summary.totalChargingCount || 0;\n          this.statistics.monthIncome = summary.totalFee || 0;\n        }\n      } catch (error) {\n        console.error('获取月度统计数据失败：', error);\n      }\n    }\n  },\n  created() {\n    this.fetchMonthlyStatistics();\n  }\n};","map":{"version":3,"names":["getChargingSystemSummaryReport","name","data","loading","statistics","monthChargingCount","monthIncome","chargingPiles","id","type","status","currentUser","chargedPower","waitingSpots","waitingUser","methods","getStatusText","statusMap","working","idle","fault","handleRepair","pile","$confirm","confirmButtonText","cancelButtonText","then","Promise","resolve","setTimeout","$message","success","error","message","catch","fetchMonthlyStatistics","response","timeType","code","summary","totalChargingCount","totalFee","console","created"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n    <div class=\"home-container\">\r\n      <el-row :gutter=\"20\">\r\n        <!-- 统计卡片 -->\r\n        <el-col :span=\"8\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-title\">本月充电次数</div>\r\n              <div class=\"stat-value\">{{ statistics.monthChargingCount }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-title\">本月收入</div>\r\n              <div class=\"stat-value\">¥{{ statistics.monthIncome }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-title\">充电桩数量</div>\r\n              <div class=\"stat-value\">{{ 5 }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 充电站状态 -->\r\n      <el-row :gutter=\"20\" class=\"mt-20\">\r\n        <el-col :span=\"24\">\r\n          <el-card>\r\n            <div slot=\"header\">\r\n              <span>充电站实时状态</span>\r\n            </div>\r\n            <div class=\"station-status\">\r\n              <div class=\"charging-area\">\r\n                <h3>充电区</h3>\r\n                <el-row :gutter=\"20\">\r\n                  <el-col :span=\"8\" v-for=\"pile in chargingPiles\" :key=\"pile.id\">\r\n                    <el-card :class=\"['pile-card', pile.status]\">\r\n                      <div class=\"pile-info\">\r\n                        <h4>{{ pile.id }}号充电桩</h4>\r\n                        <p>类型：{{ pile.type === 'fast' ? '快充' : '慢充' }}</p>\r\n                        <p>状态：{{ getStatusText(pile.status) }}</p>\r\n                        <p v-if=\"pile.status === 'working'\">\r\n                          当前用户：{{ pile.currentUser }}\r\n                        </p>\r\n                        <p v-if=\"pile.status === 'working'\">\r\n                          已充电量：{{ pile.chargedPower }}度\r\n                        </p>\r\n                        <el-button \r\n                          v-if=\"pile.status === 'fault'\"\r\n                          type=\"primary\" \r\n                          size=\"small\"\r\n                          @click=\"handleRepair(pile)\">\r\n                          维修\r\n                        </el-button>\r\n                      </div>\r\n                    </el-card>\r\n                  </el-col>\r\n                </el-row>\r\n              </div>\r\n              \r\n              <div class=\"waiting-area\">\r\n                <h3>等候区</h3>\r\n                <el-row :gutter=\"20\">\r\n                  <el-col :span=\"8\" v-for=\"(spot, index) in waitingSpots\" :key=\"index\">\r\n                    <el-card :class=\"['spot-card', spot.status]\">\r\n                      <div class=\"spot-info\">\r\n                        <h4>{{ index + 1 }}号车位</h4>\r\n                        <p>状态：{{ spot.status === 'empty' ? '空闲' : '占用' }}</p>\r\n                        <p v-if=\"spot.status === 'occupied'\">\r\n                          等待用户：{{ spot.waitingUser }}\r\n                        </p>\r\n                      </div>\r\n                    </el-card>\r\n                  </el-col>\r\n                </el-row>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { getChargingSystemSummaryReport } from '@/api/tables'\r\n\r\n  export default {\r\n    name: 'Home',\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        statistics: {\r\n          monthChargingCount: 0,\r\n          monthIncome: 0,\r\n        },\r\n        chargingPiles: [\r\n          { \r\n            id: 'A', \r\n            type: 'fast', \r\n            status: 'working',\r\n            currentUser: 'user001',\r\n            chargedPower: 15.5\r\n          },\r\n          { \r\n            id: 'B', \r\n            type: 'fast', \r\n            status: 'idle'\r\n          },\r\n          { \r\n            id: 'C', \r\n            type: 'slow', \r\n            status: 'working',\r\n            currentUser: 'user002',\r\n            chargedPower: 8.2\r\n          },\r\n          { \r\n            id: 'D', \r\n            type: 'slow', \r\n            status: 'fault'\r\n          },\r\n          { \r\n            id: 'E', \r\n            type: 'slow', \r\n            status: 'idle'\r\n          }\r\n        ],\r\n        waitingSpots: [\r\n          { status: 'occupied', waitingUser: 'user003' },\r\n          { status: 'empty' },\r\n          { status: 'occupied', waitingUser: 'user004' },\r\n          { status: 'empty' },\r\n          { status: 'empty' },\r\n          { status: 'empty' }\r\n        ]\r\n      }\r\n    },\r\n    methods: {\r\n      getStatusText(status) {\r\n        const statusMap = {\r\n          working: '工作中',\r\n          idle: '空闲',\r\n          fault: '故障'\r\n        }\r\n        return statusMap[status] || status\r\n      },\r\n      handleRepair(pile) {\r\n        this.$confirm('确认维修该充电桩吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          try {\r\n            // 这里应该调用API进行维修\r\n            await new Promise(resolve => setTimeout(resolve, 1000))\r\n            pile.status = 'idle'\r\n            this.$message.success('维修成功')\r\n          } catch (error) {\r\n            this.$message.error('维修失败：' + error.message)\r\n          }\r\n        }).catch(() => {})\r\n      },\r\n\r\n      // 获取本月统计数据\r\n      async fetchMonthlyStatistics() {\r\n        try {\r\n          const response = await getChargingSystemSummaryReport({ timeType: 'month' })\r\n          if (response.code === 200 && response.data && response.data.summary) {\r\n            const summary = response.data.summary\r\n            this.statistics.monthChargingCount = summary.totalChargingCount || 0\r\n            this.statistics.monthIncome = summary.totalFee || 0\r\n          }\r\n        } catch (error) {\r\n          console.error('获取月度统计数据失败：', error)\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchMonthlyStatistics()\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .home-container {\r\n    padding: 20px;\r\n  }\r\n  .stat-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  .stat-item {\r\n    text-align: center;\r\n    padding: 20px;\r\n  }\r\n  .stat-title {\r\n    font-size: 16px;\r\n    color: #606266;\r\n    margin-bottom: 10px;\r\n  }\r\n  .stat-value {\r\n    font-size: 24px;\r\n    color: #303133;\r\n    font-weight: bold;\r\n  }\r\n  .station-status {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  .charging-area, .waiting-area {\r\n    margin-bottom: 20px;\r\n  }\r\n  .pile-card, .spot-card {\r\n    margin-bottom: 20px;\r\n    transition: all 0.3s;\r\n  }\r\n  .pile-card.working {\r\n    border-left: 4px solid #67C23A;\r\n  }\r\n  .pile-card.idle {\r\n    border-left: 4px solid #909399;\r\n  }\r\n  .pile-card.fault {\r\n    border-left: 4px solid #F56C6C;\r\n  }\r\n  .spot-card.empty {\r\n    border-left: 4px solid #909399;\r\n  }\r\n  .spot-card.occupied {\r\n    border-left: 4px solid #E6A23C;\r\n  }\r\n  .pile-info, .spot-info {\r\n    text-align: center;\r\n  }\r\n  h3 {\r\n    margin-bottom: 15px;\r\n    color: #303133;\r\n  }\r\n  h4 {\r\n    margin: 0 0 10px 0;\r\n    color: #606266;\r\n  }\r\n  p {\r\n    margin: 5px 0;\r\n    color: #909399;\r\n  }\r\n  .mt-20 {\r\n    margin-top: 20px;\r\n  }\r\n  </style>"],"mappings":"AA0FA,SAAAA,8BAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,UAAA;QACAC,kBAAA;QACAC,WAAA;MACA;MACAC,aAAA,GACA;QACAC,EAAA;QACAC,IAAA;QACAC,MAAA;QACAC,WAAA;QACAC,YAAA;MACA,GACA;QACAJ,EAAA;QACAC,IAAA;QACAC,MAAA;MACA,GACA;QACAF,EAAA;QACAC,IAAA;QACAC,MAAA;QACAC,WAAA;QACAC,YAAA;MACA,GACA;QACAJ,EAAA;QACAC,IAAA;QACAC,MAAA;MACA,GACA;QACAF,EAAA;QACAC,IAAA;QACAC,MAAA;MACA,EACA;MACAG,YAAA,GACA;QAAAH,MAAA;QAAAI,WAAA;MAAA,GACA;QAAAJ,MAAA;MAAA,GACA;QAAAA,MAAA;QAAAI,WAAA;MAAA,GACA;QAAAJ,MAAA;MAAA,GACA;QAAAA,MAAA;MAAA,GACA;QAAAA,MAAA;MAAA;IAEA;EACA;EACAK,OAAA;IACAC,cAAAN,MAAA;MACA,MAAAO,SAAA;QACAC,OAAA;QACAC,IAAA;QACAC,KAAA;MACA;MACA,OAAAH,SAAA,CAAAP,MAAA,KAAAA,MAAA;IACA;IACAW,aAAAC,IAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAhB,IAAA;MACA,GAAAiB,IAAA;QACA;UACA;UACA,UAAAC,OAAA,CAAAC,OAAA,IAAAC,UAAA,CAAAD,OAAA;UACAN,IAAA,CAAAZ,MAAA;UACA,KAAAoB,QAAA,CAAAC,OAAA;QACA,SAAAC,KAAA;UACA,KAAAF,QAAA,CAAAE,KAAA,WAAAA,KAAA,CAAAC,OAAA;QACA;MACA,GAAAC,KAAA;IACA;IAEA;IACA,MAAAC,uBAAA;MACA;QACA,MAAAC,QAAA,SAAApC,8BAAA;UAAAqC,QAAA;QAAA;QACA,IAAAD,QAAA,CAAAE,IAAA,YAAAF,QAAA,CAAAlC,IAAA,IAAAkC,QAAA,CAAAlC,IAAA,CAAAqC,OAAA;UACA,MAAAA,OAAA,GAAAH,QAAA,CAAAlC,IAAA,CAAAqC,OAAA;UACA,KAAAnC,UAAA,CAAAC,kBAAA,GAAAkC,OAAA,CAAAC,kBAAA;UACA,KAAApC,UAAA,CAAAE,WAAA,GAAAiC,OAAA,CAAAE,QAAA;QACA;MACA,SAAAT,KAAA;QACAU,OAAA,CAAAV,KAAA,gBAAAA,KAAA;MACA;IACA;EACA;EACAW,QAAA;IACA,KAAAR,sBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}