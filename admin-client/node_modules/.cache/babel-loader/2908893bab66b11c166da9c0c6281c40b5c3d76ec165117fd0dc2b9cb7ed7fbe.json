{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    userInfo: null,\n    token: localStorage.getItem('admin-token') || ''\n  },\n  mutations: {\n    SET_USER_INFO(state, userInfo) {\n      state.userInfo = userInfo;\n    },\n    SET_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('admin-token', token);\n    },\n    CLEAR_USER(state) {\n      state.userInfo = null;\n      state.token = '';\n      localStorage.removeItem('admin-token');\n    }\n  },\n  actions: {\n    // 登录\n    async login({\n      commit\n    }, loginData) {\n      try {\n        // 这里应该调用API进行登录\n        const response = await new Promise(resolve => {\n          setTimeout(() => {\n            resolve({\n              token: 'mock-token',\n              userInfo: {\n                id: 1,\n                username: loginData.username,\n                role: 'admin'\n              }\n            });\n          }, 1000);\n        });\n        commit('SET_TOKEN', response.token);\n        commit('SET_USER_INFO', response.userInfo);\n        return response;\n      } catch (error) {\n        throw error;\n      }\n    },\n    // 登出\n    logout({\n      commit\n    }) {\n      commit('CLEAR_USER');\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","userInfo","token","localStorage","getItem","mutations","SET_USER_INFO","SET_TOKEN","setItem","CLEAR_USER","removeItem","actions","login","commit","loginData","response","Promise","resolve","setTimeout","id","username","role","error","logout"],"sources":["D:/git_project/ChargingSystem/admin-client/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    userInfo: null,\r\n    token: localStorage.getItem('admin-token') || ''\r\n  },\r\n  mutations: {\r\n    SET_USER_INFO(state, userInfo) {\r\n      state.userInfo = userInfo\r\n    },\r\n    SET_TOKEN(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('admin-token', token)\r\n    },\r\n    CLEAR_USER(state) {\r\n      state.userInfo = null\r\n      state.token = ''\r\n      localStorage.removeItem('admin-token')\r\n    }\r\n  },\r\n  actions: {\r\n    // 登录\r\n    async login({ commit }, loginData) {\r\n      try {\r\n        // 这里应该调用API进行登录\r\n        const response = await new Promise(resolve => {\r\n          setTimeout(() => {\r\n            resolve({\r\n              token: 'mock-token',\r\n              userInfo: {\r\n                id: 1,\r\n                username: loginData.username,\r\n                role: 'admin'\r\n              }\r\n            })\r\n          }, 1000)\r\n        })\r\n        \r\n        commit('SET_TOKEN', response.token)\r\n        commit('SET_USER_INFO', response.userInfo)\r\n        return response\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    // 登出\r\n    logout({ commit }) {\r\n      commit('CLEAR_USER')\r\n    }\r\n  }\r\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI;EAChD,CAAC;EACDC,SAAS,EAAE;IACTC,aAAaA,CAACN,KAAK,EAAEC,QAAQ,EAAE;MAC7BD,KAAK,CAACC,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDM,SAASA,CAACP,KAAK,EAAEE,KAAK,EAAE;MACtBF,KAAK,CAACE,KAAK,GAAGA,KAAK;MACnBC,YAAY,CAACK,OAAO,CAAC,aAAa,EAAEN,KAAK,CAAC;IAC5C,CAAC;IACDO,UAAUA,CAACT,KAAK,EAAE;MAChBA,KAAK,CAACC,QAAQ,GAAG,IAAI;MACrBD,KAAK,CAACE,KAAK,GAAG,EAAE;MAChBC,YAAY,CAACO,UAAU,CAAC,aAAa,CAAC;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEC,SAAS,EAAE;MACjC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAI;UAC5CC,UAAU,CAAC,MAAM;YACfD,OAAO,CAAC;cACNf,KAAK,EAAE,YAAY;cACnBD,QAAQ,EAAE;gBACRkB,EAAE,EAAE,CAAC;gBACLC,QAAQ,EAAEN,SAAS,CAACM,QAAQ;gBAC5BC,IAAI,EAAE;cACR;YACF,CAAC,CAAC;UACJ,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,CAAC;QAEFR,MAAM,CAAC,WAAW,EAAEE,QAAQ,CAACb,KAAK,CAAC;QACnCW,MAAM,CAAC,eAAe,EAAEE,QAAQ,CAACd,QAAQ,CAAC;QAC1C,OAAOc,QAAQ;MACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF,CAAC;IACD;IACAC,MAAMA,CAAC;MAAEV;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,YAAY,CAAC;IACtB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}