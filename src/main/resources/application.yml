server:
  port: 8080

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/chargingSystem?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: 123456
#    password: root
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

mybatis:
  mapper-locations: classpath:com/online/chargingSystem/mapper/*.xml
  type-aliases-package: com.online.chargingSystem.entity
  configuration:
    map-underscore-to-camel-case: true
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl  # 隐藏日志输出

# 日志输出配置
logging:
  level:
    com.online.chargingSystem: INFO
    org.springframework: WARN
    org.mybatis: WARN
  file:
    name: logs/charging-system.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 30
      total-size-cap: 1GB

# 充电站配置
charging-station:
  # 等候区配置
  waiting-area:
    max-capacity: 6  # 最大车位容量

  # 充电区配置
  charging-area:
    # 充电桩数量配置
    fast-piles: 2    # 快充电桩数量
    trickle-piles: 3 # 慢充电桩数量
    queue-length: 2  # 每个充电桩排队队列长度

    # 充电功率配置（度/小时）
    charging-rates:
      fast: 30.0     # 快充功率
      trickle: 7.0   # 慢充功率

    # 计费配置
    pricing:
      # 电价时段配置
      price-periods:
        - id: 1
          type: 'STANDARD'
          start: '07:00:00'
          end: '10:00:00'
          price: 0.70
        - id: 2
          type: 'PEAK'
          start: '10:00:00'
          end: '15:00:00'
          price: 1.00
        - id: 3
          type: 'STANDARD'
          start: '15:00:00'
          end: '18:00:00'
          price: 0.70
        - id: 4
          type: 'PEAK'
          start: '18:00:00'
          end: '21:00:00'
          price: 1.00
        - id: 5
          type: 'STANDARD'
          start: '21:00:00'
          end: '23:00:00'
          price: 0.70
        - id: 6
          type: 'VALLEY'
          start: '23:00:00'
          end: '07:00:00'
          price: 0.40
      service-rate: 0.80  # 服务费单价（元/度）

# 定时任务配置
scheduling:
  task:
    interval: 5000  # 定时任务执行间隔（毫秒）