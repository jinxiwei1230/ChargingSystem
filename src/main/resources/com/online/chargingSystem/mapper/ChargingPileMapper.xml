<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.online.chargingSystem.mapper.ChargingPileMapper">
    <resultMap id="BaseResultMap" type="com.online.chargingSystem.entity.ChargingPile">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="charging_power" property="chargingPower"/>
        <result column="charging_times" property="chargingTimes"/>
        <result column="total_charging_duration" property="totalChargingDuration"/>
        <result column="total_charging_amount" property="totalChargingAmount"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <resultMap id="QueueInfoResultMap" type="com.online.chargingSystem.dto.ChargingPileQueueDTO">
        <result column="requestId" property="requestId"/>
        <result column="userId" property="userId"/>
        <result column="batteryCapacity" property="batteryCapacity"/>
        <result column="requestAmount" property="requestAmount"/>
        <result column="queueNumber" property="queueNumber"/>
        <result column="queueJoinTime" property="queueJoinTime"/>
        <result column="pileId" property="pileId"/>
        <result column="waitingDuration" property="waitingDuration"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, type, status, charging_power, charging_times, total_charging_duration, 
        total_charging_amount, created_at, updated_at
    </sql>

    <insert id="insert" parameterType="com.online.chargingSystem.entity.ChargingPile">
        INSERT INTO charging_pile (
            id, type, status, charging_power, charging_times, total_charging_duration,
            total_charging_amount, created_at, updated_at
        ) VALUES (
            #{id}, #{type}, #{status}, #{chargingPower}, #{chargingTimes}, #{totalChargingDuration},
            #{totalChargingAmount}, NOW(), NOW()
        )
    </insert>

    <update id="update" parameterType="com.online.chargingSystem.entity.ChargingPile">
        UPDATE charging_pile
        SET status = #{status},
            charging_power = #{chargingPower},
            charging_times = #{chargingTimes},
            total_charging_duration = #{totalChargingDuration},
            total_charging_amount = #{totalChargingAmount},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <select id="findById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM charging_pile
        WHERE id = #{pileId}
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM charging_pile
    </select>

    <select id="findAvailable" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM charging_pile
        WHERE status = 'AVAILABLE'
    </select>

    <select id="findFaulty" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM charging_pile
        WHERE status = 'FAULT'
    </select>

    <update id="updateStatus">
        UPDATE charging_pile
        SET status = #{status},
            updated_at = NOW()
        WHERE id = #{pileId}
    </update>

    <update id="updateParameters">
        UPDATE charging_pile
        SET charging_power = #{chargingPower},
            updated_at = NOW()
        WHERE id = #{pileId}
    </update>

    <select id="findPileQueueInfo" resultMap="QueueInfoResultMap">
        SELECT 
            r.id as requestId,
            r.user_id as userId,
            u.battery_capacity as batteryCapacity,
            r.amount as requestAmount,
            r.queue_number as queueNumber,
            r.queue_join_time as queueJoinTime,
            r.charging_pile_id as pileId,
            TIMESTAMPDIFF(MINUTE, r.queue_join_time, NOW()) as waitingDuration
        FROM charging_request r
        JOIN user u ON r.user_id = u.id
        WHERE r.charging_pile_id = #{pileId}
        AND r.status = 'WAITING_IN_CHARGING_AREA'
        ORDER BY r.queue_join_time
    </select>

    <select id="findAllPileQueueInfo" resultMap="QueueInfoResultMap">
        SELECT 
            r.id as requestId,
            r.user_id as userId,
            u.battery_capacity as batteryCapacity,
            r.amount as requestAmount,
            r.queue_number as queueNumber,
            r.queue_join_time as queueJoinTime,
            r.charging_pile_id as pileId,
            TIMESTAMPDIFF(MINUTE, r.queue_join_time, NOW()) as waitingDuration
        FROM charging_request r
        JOIN user u ON r.user_id = u.id
        WHERE r.status = 'WAITING_IN_CHARGING_AREA'
        ORDER BY r.charging_pile_id, r.queue_join_time
    </select>
</mapper> 