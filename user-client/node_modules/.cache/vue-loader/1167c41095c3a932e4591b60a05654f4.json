{"remainingRequest":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git_project\\ChargingSystem\\user-client\\src\\views\\QueueStatus.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\git_project\\ChargingSystem\\user-client\\src\\views\\QueueStatus.vue","mtime":1749309854426},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749209592798},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1749209593164},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749209592798},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1749209591090}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["QueueStatus.vue"],"names":[],"mappings":";AAwfile":"QueueStatus.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"queue-status-container\">\r\n    <el-card v-if=\"queueInfo\">\r\n      <div slot=\"header\">\r\n        <span>排队状态</span>\r\n      </div>\r\n      \r\n      <div class=\"queue-info\">\r\n        <div class=\"queue-number\">\r\n          <h3>您的排队号码</h3>\r\n          <div class=\"number\">{{ queueInfo.queueNumber }}</div>\r\n        </div>\r\n        \r\n        <el-divider></el-divider>\r\n        \r\n        <div class=\"queue-details\">\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">充电模式：</span>\r\n            <span class=\"value\">{{ queueInfo.mode === 'FAST' ? '快充' : '慢充' }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">充电量：</span>\r\n            <span class=\"value\">{{ queueInfo.amount }}度</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">充电桩：</span>\r\n            <span class=\"value\">{{ queueInfo.chargingPileId || '未分配' }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">状态：</span>\r\n            <span class=\"value\">\r\n              <el-tag :type=\"getStatusType(queueInfo.status)\">\r\n                {{ getStatusText(queueInfo.status) }}\r\n              </el-tag>\r\n            </span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">排队时间：</span>\r\n            <span class=\"value\">{{ formatDateTime(queueInfo.queueJoinTime) }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">请求时间：</span>\r\n            <span class=\"value\">{{ formatDateTime(queueInfo.requestTime) }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">开始充电时间：</span>\r\n            <span class=\"value\">{{ queueInfo.chargingStartTime ? formatDateTime(queueInfo.chargingStartTime) : '未开始' }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">前车等待数量：</span>\r\n            <span class=\"value\">{{ queueInfo.waitingCount }}辆</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-divider></el-divider>\r\n        \r\n        <div class=\"queue-actions\">\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"goToChargingRequest\"\r\n            :disabled=\"!canModifyRequest\">\r\n            修改请求\r\n          </el-button>\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"showCancelDialog\">\r\n            取消排队\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"handleFinishCharging\" :disabled=\"queueInfo.status !== 'CHARGING'\">\r\n            结束充电\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"getWaitingQueue\">\r\n            查看等候区排队\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <el-empty v-else description=\"暂无排队信息\">\r\n      <el-button type=\"primary\" @click=\"goToChargingRequestPage\">\r\n        去提交充电请求\r\n      </el-button>\r\n    </el-empty>\r\n\r\n    <!-- 添加排队情况表格对话框 -->\r\n    <el-dialog\r\n      title=\"当前排队情况\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"70%\">\r\n      <el-table\r\n        :data=\"waitingQueueData\"\r\n        style=\"width: 100%\">\r\n        <el-table-column\r\n          prop=\"userId\"\r\n          label=\"用户ID\"\r\n          width=\"100\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"queueNumber\"\r\n          label=\"排队号码\"\r\n          width=\"120\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"mode\"\r\n          label=\"充电模式\"\r\n          width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.mode === 'FAST' ? '快充' : '慢充' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"amount\"\r\n          label=\"充电量(kWh)\"\r\n          width=\"120\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"queueJoinTime\"\r\n          label=\"排队时间\"\r\n          width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDateTime(scope.row.queueJoinTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"status\"\r\n          label=\"状态\"\r\n          width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            {{ getStatusText(scope.row.status) }}\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n\r\n    <!-- 修改充电请求对话框 -->\r\n    <el-dialog\r\n      title=\"修改充电请求\"\r\n      :visible.sync=\"modifyDialogVisible\"\r\n      width=\"30%\">\r\n      <el-form :model=\"modifyForm\" label-width=\"100px\">\r\n        <el-form-item label=\"充电模式\" v-if=\"canModifyMode\">\r\n          <el-select v-model=\"modifyForm.mode\" placeholder=\"请选择充电模式\">\r\n            <el-option\r\n              v-for=\"item in modeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"充电量(度)\">\r\n          <el-input-number \r\n            v-model=\"modifyForm.amount\" \r\n            :min=\"0\" \r\n            :precision=\"1\"\r\n            :step=\"0.5\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"modifyDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleModify\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 取消充电对话框 -->\r\n    <el-dialog\r\n      title=\"取消充电\"\r\n      :visible.sync=\"cancelDialogVisible\"\r\n      width=\"30%\">\r\n      <div class=\"cancel-options\">\r\n        <p>请选择取消后的操作：</p>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"showNewRequestDialog\"\r\n          :loading=\"cancelLoading\">\r\n          重新排队\r\n        </el-button>\r\n        <el-button \r\n          type=\"danger\" \r\n          @click=\"handleCancelAndLeave\"\r\n          :loading=\"cancelLoading\">\r\n          离开系统\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 新的充电请求对话框 -->\r\n    <el-dialog\r\n      title=\"提交充电请求\"\r\n      :visible.sync=\"newRequestDialogVisible\"\r\n      width=\"30%\">\r\n      <el-form \r\n        :model=\"newRequestForm\" \r\n        :rules=\"newRequestRules\"\r\n        ref=\"newRequestForm\" \r\n        label-width=\"100px\">\r\n        <el-form-item label=\"充电模式\" prop=\"mode\">\r\n          <el-select v-model=\"newRequestForm.mode\" placeholder=\"请选择充电模式\">\r\n            <el-option\r\n              v-for=\"item in modeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"充电量(度)\" prop=\"requestAmount\">\r\n          <el-input-number \r\n            v-model=\"newRequestForm.requestAmount\" \r\n            :min=\"0\" \r\n            :precision=\"1\"\r\n            :step=\"0.5\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"newRequestDialogVisible = false\">取 消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"handleNewRequest\"\r\n          :loading=\"newRequestLoading\">\r\n          提 交\r\n        </el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 无充电请求提示对话框 -->\r\n    <el-dialog\r\n      title=\"提示\"\r\n      :visible.sync=\"noRequestDialogVisible\"\r\n      width=\"30%\"\r\n      :show-close=\"false\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\">\r\n      <div class=\"no-request-content\">\r\n        <p>当前没有充电请求，请提交</p>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"goToChargingRequestPage\">\r\n          去提交充电请求\r\n        </el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { \r\n  getQueueNumber, \r\n  getWaitingQueue, \r\n  getAheadNumber, \r\n  modifyChargingMode, \r\n  modifyChargingAmount,\r\n  cancelAndRequeue,\r\n  cancelAndLeave,\r\n  getUserRequests,\r\n  submitChargingRequest,\r\n  finishCharging\r\n} from '@/api/schedule'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'QueueStatus',\r\n  data() {\r\n    return {\r\n      queueInfo: {\r\n        mode:'',\r\n        waitingCount: 0,\r\n        queueNumber: '',\r\n        amount: 0\r\n      },\r\n      timer: null,\r\n      dialogVisible: false,\r\n      waitingQueueData: [],\r\n      modifyDialogVisible: false,\r\n      modifyForm: {\r\n        mode: '',\r\n        amount: 0\r\n      },\r\n      modeOptions: [\r\n        { label: '快充', value: 'FAST' },\r\n        { label: '慢充', value: 'SLOW' }\r\n      ],\r\n      cancelDialogVisible: false,\r\n      cancelLoading: false,\r\n      newRequestDialogVisible: false,\r\n      newRequestLoading: false,\r\n      newRequestForm: {\r\n        mode: 'FAST',\r\n        requestAmount: 10.0\r\n      },\r\n      newRequestRules: {\r\n        mode: [\r\n          { required: true, message: '请选择充电模式', trigger: 'change' }\r\n        ],\r\n        requestAmount: [\r\n          { required: true, message: '请输入充电量', trigger: 'blur' },\r\n          { type: 'number', min: 0, message: '充电量必须大于0', trigger: 'blur' }\r\n        ]\r\n      },\r\n      noRequestDialogVisible: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['userId']),\r\n    // 判断是否可以修改请求\r\n    canModifyRequest() {\r\n      if (!this.queueInfo) return false\r\n      return this.queueInfo.status === 'WAITING_IN_WAITING_AREA'\r\n    },\r\n    // 判断是否可以修改充电模式\r\n    canModifyMode() {\r\n      if (!this.queueInfo) return false\r\n      return this.queueInfo.status === 'WAITING_IN_WAITING_AREA'\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchQueueInfo()\r\n    // 每1秒刷新一次排队信息\r\n    this.timer = setInterval(this.fetchQueueInfo, 30000)\r\n  },\r\n  beforeDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchQueueInfo() {\r\n      // 不再使用try-catch包裹整个方法，避免API错误被自动转为消息提示\r\n      if (!this.userId) {\r\n        return\r\n      }\r\n      \r\n      // 创建一个不会触发全局错误处理的请求版本\r\n      const fetchRequestsSafely = async () => {\r\n        try {\r\n          const response = await getUserRequests(this.userId)\r\n          return { success: true, data: response }\r\n        } catch (error) {\r\n          return { success: false, error }\r\n        }\r\n      }\r\n      \r\n      // 安全地获取请求列表\r\n      const result = await fetchRequestsSafely()\r\n      \r\n      // 处理成功响应\r\n      if (result.success && result.data.code === 200 && result.data.data && result.data.data.length > 0) {\r\n        // 获取最新的请求（id最大的）\r\n        const latestRequest = result.data.data.reduce((prev, current) => \r\n          (prev.id > current.id) ? prev : current\r\n        )\r\n        \r\n        // 只有当状态发生变化时才更新整个queueInfo\r\n        if (!this.queueInfo || this.queueInfo.id !== latestRequest.id) {\r\n          this.queueInfo = {\r\n            ...latestRequest,\r\n            waitingCount: 0\r\n          }\r\n          \r\n          // 只在状态为等待时才获取前车等待数量\r\n          if (latestRequest.status === 'WAITING_IN_WAITING_AREA' || \r\n              latestRequest.status === 'WAITING_IN_CHARGING_AREA') {\r\n            // 安全获取前车等待数量\r\n            const fetchAheadNumberSafely = async () => {\r\n              try {\r\n                const response = await getAheadNumber(this.userId)\r\n                return { success: true, data: response }\r\n              } catch (error) {\r\n                return { success: false, error }\r\n              }\r\n            }\r\n            \r\n            const aheadResult = await fetchAheadNumberSafely()\r\n            if (aheadResult.success && aheadResult.data.code === 200) {\r\n              this.queueInfo.waitingCount = aheadResult.data.data\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // 处理请求失败或没有记录的情况\r\n        this.queueInfo = null\r\n        this.noRequestDialogVisible = true\r\n      }\r\n    },\r\n    showCancelDialog() {\r\n      this.cancelDialogVisible = true\r\n    },\r\n    \r\n    async handleCancelAndRequeue() {\r\n      try {\r\n        this.cancelLoading = true\r\n        const response = await cancelAndRequeue(this.userId)\r\n        if (response.code === 200) {\r\n          this.$message.success('已取消充电并重新排队')\r\n          this.cancelDialogVisible = false\r\n          this.fetchQueueInfo() // 刷新状态\r\n        } else {\r\n          this.$message.error(response.message || '取消失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('取消失败：' + error.message)\r\n      } finally {\r\n        this.cancelLoading = false\r\n      }\r\n    },\r\n    \r\n    async handleCancelAndLeave() {\r\n      try {\r\n        this.cancelLoading = true\r\n        const response = await cancelAndLeave(this.userId)\r\n        if (response.code === 200) {\r\n          this.$message.success('已取消充电并离开系统')\r\n          this.cancelDialogVisible = false\r\n          this.queueInfo = null\r\n        } else {\r\n          this.$message.error(response.message || '取消失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('取消失败：' + error.message)\r\n      } finally {\r\n        this.cancelLoading = false\r\n      }\r\n    },\r\n    \r\n    goToChargingRequest() {\r\n      if (!this.canModifyRequest) {\r\n        this.$message.warning('当前状态不允许修改请求')\r\n        return\r\n      }\r\n      this.modifyDialogVisible = true\r\n      // 初始化表单数据\r\n      this.modifyForm = {\r\n        mode: this.queueInfo.mode,\r\n        amount: this.queueInfo.amount\r\n      }\r\n    },\r\n    \r\n    goToChargingRequestPage() {\r\n      // 关闭对话框并跳转到充电请求页面\r\n      this.noRequestDialogVisible = false\r\n      this.$router.push('/charging-request')\r\n    },\r\n    \r\n    async getWaitingQueue() {\r\n      try {\r\n        const response = await getWaitingQueue()\r\n        if (response.code === 200) {\r\n          this.waitingQueueData = response.data\r\n          this.dialogVisible = true\r\n        } else {\r\n          this.$message.error(response.message || '获取排队情况失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取排队情况失败：' + error.message)\r\n      }\r\n    },\r\n    formatDateTime(dateTimeStr) {\r\n      if (!dateTimeStr) return ''\r\n      const date = new Date(dateTimeStr)\r\n      return date.toLocaleString()\r\n    },\r\n    getStatusText(status) {\r\n      const statusMap = {\r\n        'WAITING_IN_WAITING_AREA': '等候区等待',\r\n        'WAITING_IN_CHARGING_AREA': '充电区等待',\r\n        'CHARGING': '充电中',\r\n        'COMPLETED': '已完成',\r\n        'CANCELED': '已取消'\r\n      }\r\n      return statusMap[status] || status\r\n    },\r\n    getStatusType(status) {\r\n      const typeMap = {\r\n        'WAITING_IN_WAITING_AREA': 'warning',\r\n        'WAITING_IN_CHARGING_AREA': 'info',\r\n        'CHARGING': 'success',\r\n        'COMPLETED': '',\r\n        'CANCELED': 'danger'\r\n      }\r\n      return typeMap[status] || ''\r\n    },\r\n    async handleModify() {\r\n      try {\r\n        // 修改充电模式\r\n        if (this.canModifyMode && this.modifyForm.mode !== this.queueInfo.mode) {\r\n          const modeResponse = await modifyChargingMode({\r\n            userId: this.userId,\r\n            mode: this.modifyForm.mode\r\n          })\r\n          if (modeResponse.code === 200) {\r\n            this.$message.success('充电模式修改成功')\r\n          } else {\r\n            this.$message.error(modeResponse.message || '充电模式修改失败')\r\n            return\r\n          }\r\n        }\r\n\r\n        // 修改充电量\r\n        if (this.modifyForm.amount !== this.queueInfo.amount) {\r\n          const amountResponse = await modifyChargingAmount({\r\n            userId: this.userId,\r\n            requestAmount: this.modifyForm.amount\r\n          })\r\n          if (amountResponse.code === 200) {\r\n            this.$message.success('充电量修改成功')\r\n          } else {\r\n            this.$message.error(amountResponse.message || '充电量修改失败')\r\n            return\r\n          }\r\n        }\r\n\r\n        this.modifyDialogVisible = false\r\n        this.fetchQueueInfo() // 刷新状态\r\n      } catch (error) {\r\n        this.$message.error('修改失败：' + error.message)\r\n      }\r\n    },\r\n    showNewRequestDialog() {\r\n      this.cancelDialogVisible = false\r\n      this.newRequestDialogVisible = true\r\n      // 初始化表单数据\r\n      this.newRequestForm = {\r\n        mode: 'FAST',\r\n        requestAmount: 10.0\r\n      }\r\n    },\r\n    \r\n    async handleNewRequest() {\r\n      try {\r\n        this.$refs.newRequestForm.validate(async valid => {\r\n          if (valid) {\r\n            this.newRequestLoading = true\r\n            // 先取消当前请求\r\n            const cancelResponse = await cancelAndRequeue(this.userId)\r\n            if (cancelResponse.code === 200) {\r\n              // 提交新的充电请求\r\n              const response = await submitChargingRequest({\r\n                userId: this.userId,\r\n                mode: this.newRequestForm.mode,\r\n                requestAmount: this.newRequestForm.requestAmount\r\n              })\r\n              \r\n              if (response.code === 200) {\r\n                this.$message.success('充电请求提交成功')\r\n                this.newRequestDialogVisible = false\r\n                this.fetchQueueInfo() // 刷新状态\r\n              } else {\r\n                this.$message.error(response.message || '充电请求提交失败')\r\n              }\r\n            } else {\r\n              this.$message.error(cancelResponse.message || '取消当前请求失败')\r\n            }\r\n          }\r\n        })\r\n      } catch (error) {\r\n        this.$message.error('操作失败：' + error.message)\r\n      } finally {\r\n        this.newRequestLoading = false\r\n      }\r\n    },\r\n    async handleFinishCharging() {\r\n      try {\r\n        const response = await finishCharging(this.userId)\r\n        if (response.code === 200) {\r\n          this.$message.success('充电结束')\r\n          this.fetchQueueInfo() // 刷新状态\r\n        } else {\r\n          this.$message.error(response.message || '结束充电失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('结束充电失败：' + error.message)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.queue-status-container {\r\n  padding: 20px;\r\n}\r\n.queue-info {\r\n  text-align: center;\r\n}\r\n.queue-number {\r\n  margin-bottom: 20px;\r\n}\r\n.number {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n  margin: 20px 0;\r\n}\r\n.queue-details {\r\n  text-align: left;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n.detail-item {\r\n  margin: 15px 0;\r\n  font-size: 16px;\r\n}\r\n.label {\r\n  color: #606266;\r\n  margin-right: 10px;\r\n}\r\n.value {\r\n  color: #303133;\r\n  font-weight: bold;\r\n}\r\n.queue-actions {\r\n  margin-top: 20px;\r\n}\r\n.cancel-options {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n.cancel-options .el-button {\r\n  margin: 10px;\r\n}\r\n.no-request-content {\r\n  text-align: center;\r\n  font-size: 16px;\r\n  padding: 20px;\r\n}\r\n</style> "]}]}