{"remainingRequest":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git_project\\ChargingSystem\\user-client\\src\\views\\QueueStatus.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\git_project\\ChargingSystem\\user-client\\src\\views\\QueueStatus.vue","mtime":1749285715598},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749209592798},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1749209593164},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749209592798},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1749209591090}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBnZXRRdWV1ZU51bWJlciwgZ2V0V2FpdGluZ1F1ZXVlLCBnZXRBaGVhZE51bWJlciwgbW9kaWZ5Q2hhcmdpbmdNb2RlLCBtb2RpZnlDaGFyZ2luZ0Ftb3VudCB9IGZyb20gJ0AvYXBpL3NjaGVkdWxlJw0KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ1F1ZXVlU3RhdHVzJywNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcXVldWVJbmZvOiB7DQogICAgICAgIG1vZGU6JycsDQogICAgICAgIHdhaXRpbmdDb3VudDogMCwNCiAgICAgICAgcXVldWVOdW1iZXI6ICcnLA0KICAgICAgICBhbW91bnQ6IDANCiAgICAgIH0sDQogICAgICB0aW1lcjogbnVsbCwNCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgd2FpdGluZ1F1ZXVlRGF0YTogW10sDQogICAgICBtb2RpZnlEaWFsb2dWaXNpYmxlOiBmYWxzZSwNCiAgICAgIG1vZGlmeUZvcm06IHsNCiAgICAgICAgbW9kZTogJycsDQogICAgICAgIGFtb3VudDogMA0KICAgICAgfSwNCiAgICAgIG1vZGVPcHRpb25zOiBbDQogICAgICAgIHsgbGFiZWw6ICflv6vlhYUnLCB2YWx1ZTogJ0ZBU1QnIH0sDQogICAgICAgIHsgbGFiZWw6ICfmhaLlhYUnLCB2YWx1ZTogJ1NMT1cnIH0NCiAgICAgIF0NCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwR2V0dGVycyhbJ3VzZXJJZCddKQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMuZmV0Y2hRdWV1ZUluZm8oKQ0KICAgIC8vIOavjzHnp5LliLfmlrDkuIDmrKHmjpLpmJ/kv6Hmga8NCiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5mZXRjaFF1ZXVlSW5mbywgMTAwMCkNCiAgfSwNCiAgYmVmb3JlRGVzdHJveSgpIHsNCiAgICBpZiAodGhpcy50aW1lcikgew0KICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIGZldGNoUXVldWVJbmZvKCkgew0KICAgICAgdHJ5IHsNCiAgICAgICAgaWYgKCF0aGlzLnVzZXJJZCkgew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+eUqOaIt+acqueZu+W9lScpDQogICAgICAgICAgcmV0dXJuDQogICAgICAgIH0NCiAgICAgICAgY29uc3QgcmVzcG9uc2UxID0gYXdhaXQgZ2V0UXVldWVOdW1iZXIodGhpcy51c2VySWQpDQogICAgICAgIGlmIChyZXNwb25zZTEuY29kZSA9PT0gMjAwKSB7DQogICAgICAgICAgLy8g5aaC5p6c6L+U5ZuebnVsbO+8jOivtOaYjuayoeacieaOkumYn+S/oeaBrw0KICAgICAgICAgIGlmIChyZXNwb25zZTEuZGF0YSA9PT0gbnVsbCkgew0KICAgICAgICAgICAgdGhpcy5xdWV1ZUluZm8gPSBudWxsDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRoaXMucXVldWVJbmZvLnF1ZXVlTnVtYmVyID0gcmVzcG9uc2UxLmRhdGENCiAgICAgICAgICAgIC8vIOiOt+WPluWJjei9puetieW+heaVsOmHjw0KICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UyID0gYXdhaXQgZ2V0QWhlYWROdW1iZXIodGhpcy51c2VySWQpDQogICAgICAgICAgICBpZiAocmVzcG9uc2UyLmNvZGUgPT09IDIwMCkgew0KICAgICAgICAgICAgICB0aGlzLnF1ZXVlSW5mby53YWl0aW5nQ291bnQgPSByZXNwb25zZTIuZGF0YQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwb25zZTIubWVzc2FnZSB8fCAn6I635Y+W5YmN6L2m562J5b6F5pWw6YeP5aSx6LSlJykNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwb25zZTEubWVzc2FnZSB8fCAn6I635Y+W5o6S6Zif5L+h5oGv5aSx6LSlJykNCiAgICAgICAgfQ0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W5o6S6Zif5L+h5oGv5aSx6LSl77yaJyArIGVycm9yLm1lc3NhZ2UpDQogICAgICB9DQogICAgfSwNCiAgICBnb1RvQ2hhcmdpbmdSZXF1ZXN0KCkgew0KICAgICAgdGhpcy5tb2RpZnlEaWFsb2dWaXNpYmxlID0gdHJ1ZQ0KICAgICAgLy8g5Yid5aeL5YyW6KGo5Y2V5pWw5o2uDQogICAgICB0aGlzLm1vZGlmeUZvcm0gPSB7DQogICAgICAgIG1vZGU6IHRoaXMucXVldWVJbmZvLm1vZGUsDQogICAgICAgIGFtb3VudDogdGhpcy5xdWV1ZUluZm8uYW1vdW50DQogICAgICB9DQogICAgfSwNCiAgICBjYW5jZWxRdWV1ZSgpIHsNCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruiupOWPlua2iOaOkumYn+WQl++8nycsICfmj5DnpLonLCB7DQogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywNCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsDQogICAgICAgIHR5cGU6ICd3YXJuaW5nJw0KICAgICAgfSkudGhlbihhc3luYyAoKSA9PiB7DQogICAgICAgIHRyeSB7DQogICAgICAgICAgLy8g6L+Z6YeM5bqU6K+l6LCD55SoQVBJ5Y+W5raI5o6S6ZifDQogICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKQ0KICAgICAgICAgIHRoaXMucXVldWVJbmZvID0gbnVsbA0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5bey5Y+W5raI5o6S6ZifJykNCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflj5bmtojlpLHotKXvvJonICsgZXJyb3IubWVzc2FnZSkNCiAgICAgICAgfQ0KICAgICAgfSkuY2F0Y2goKCkgPT4ge30pDQogICAgfSwNCiAgICBhc3luYyBnZXRXYWl0aW5nUXVldWUoKSB7DQogICAgICB0cnkgew0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdldFdhaXRpbmdRdWV1ZSgpDQogICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICB0aGlzLndhaXRpbmdRdWV1ZURhdGEgPSByZXNwb25zZS5kYXRhDQogICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcG9uc2UubWVzc2FnZSB8fCAn6I635Y+W5o6S6Zif5oOF5Ya15aSx6LSlJykNCiAgICAgICAgfQ0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W5o6S6Zif5oOF5Ya15aSx6LSl77yaJyArIGVycm9yLm1lc3NhZ2UpDQogICAgICB9DQogICAgfSwNCiAgICBmb3JtYXREYXRlVGltZShkYXRlVGltZVN0cikgew0KICAgICAgaWYgKCFkYXRlVGltZVN0cikgcmV0dXJuICcnDQogICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVRpbWVTdHIpDQogICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZygpDQogICAgfSwNCiAgICBnZXRTdGF0dXNUZXh0KHN0YXR1cykgew0KICAgICAgY29uc3Qgc3RhdHVzTWFwID0gew0KICAgICAgICAnV0FJVElOR19JTl9XQUlUSU5HX0FSRUEnOiAn562J5YCZ5Yy6562J5b6FJywNCiAgICAgICAgJ0NIQVJHSU5HJzogJ+WFheeUteS4rScsDQogICAgICAgICdDT01QTEVURUQnOiAn5bey5a6M5oiQJywNCiAgICAgICAgJ0NBTkNFTExFRCc6ICflt7Llj5bmtognDQogICAgICB9DQogICAgICByZXR1cm4gc3RhdHVzTWFwW3N0YXR1c10gfHwgc3RhdHVzDQogICAgfSwNCiAgICBhc3luYyBoYW5kbGVNb2RpZnkoKSB7DQogICAgICB0cnkgew0KICAgICAgICAvLyDkv67mlLnlhYXnlLXmqKHlvI8NCiAgICAgICAgaWYgKHRoaXMubW9kaWZ5Rm9ybS5tb2RlICE9PSB0aGlzLnF1ZXVlSW5mby5tb2RlKSB7DQogICAgICAgICAgY29uc3QgbW9kZVJlc3BvbnNlID0gYXdhaXQgbW9kaWZ5Q2hhcmdpbmdNb2RlKHsNCiAgICAgICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsDQogICAgICAgICAgICBtb2RlOiB0aGlzLm1vZGlmeUZvcm0ubW9kZQ0KICAgICAgICAgIH0pDQogICAgICAgICAgaWYgKG1vZGVSZXNwb25zZS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICAgIHRoaXMucXVldWVJbmZvLm1vZGUgPSB0aGlzLm1vZGlmeUZvcm0ubW9kZQ0KICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflhYXnlLXmqKHlvI/kv67mlLnmiJDlip8nKQ0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKG1vZGVSZXNwb25zZS5tZXNzYWdlIHx8ICflhYXnlLXmqKHlvI/kv67mlLnlpLHotKUnKQ0KICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgLy8g5L+u5pS55YWF55S16YePDQogICAgICAgIGlmICh0aGlzLm1vZGlmeUZvcm0uYW1vdW50ICE9PSB0aGlzLnF1ZXVlSW5mby5hbW91bnQpIHsNCiAgICAgICAgICBjb25zdCBhbW91bnRSZXNwb25zZSA9IGF3YWl0IG1vZGlmeUNoYXJnaW5nQW1vdW50KHsNCiAgICAgICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsDQogICAgICAgICAgICByZXF1ZXN0QW1vdW50OiB0aGlzLm1vZGlmeUZvcm0uYW1vdW50DQogICAgICAgICAgfSkNCiAgICAgICAgICBpZiAoYW1vdW50UmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7DQogICAgICAgICAgICB0aGlzLnF1ZXVlSW5mby5hbW91bnQgPSB0aGlzLm1vZGlmeUZvcm0uYW1vdW50DQogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WFheeUtemHj+S/ruaUueaIkOWKnycpDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoYW1vdW50UmVzcG9uc2UubWVzc2FnZSB8fCAn5YWF55S16YeP5L+u5pS55aSx6LSlJykNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHRoaXMubW9kaWZ5RGlhbG9nVmlzaWJsZSA9IGZhbHNlDQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkv67mlLnlpLHotKXvvJonICsgZXJyb3IubWVzc2FnZSkNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["QueueStatus.vue"],"names":[],"mappings":";AAofile":"QueueStatus.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"queue-status-container\">\r\n    <el-card v-if=\"queueInfo\">\r\n      <div slot=\"header\">\r\n        <span>排队状态</span>\r\n      </div>\r\n      \r\n      <div class=\"queue-info\">\r\n        <div class=\"queue-number\">\r\n          <h3>您的排队号码</h3>\r\n          <div class=\"number\">{{ queueInfo.queueNumber }}</div>\r\n        </div>\r\n        \r\n        <el-divider></el-divider>\r\n        \r\n        <div class=\"queue-details\">\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">充电模式：</span>\r\n            <span class=\"value\">{{ queueInfo.mode === 'FAST' ? '快充' : '慢充' }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">前车等待数量：</span>\r\n            <span class=\"value\">{{ queueInfo.waitingCount }}辆</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-divider></el-divider>\r\n        \r\n        <div class=\"queue-actions\">\r\n          <el-button type=\"primary\" @click=\"goToChargingRequest\">\r\n            修改请求\r\n          </el-button>\r\n          <el-button type=\"danger\" @click=\"cancelQueue\">\r\n            取消排队\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"getWaitingQueue\">\r\n          查看排队情况\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <el-empty v-else description=\"暂无排队信息\">\r\n      <el-button type=\"primary\" @click=\"goToChargingRequest\">\r\n        去提交充电请求\r\n      </el-button>\r\n    </el-empty>\r\n\r\n    <!-- 添加排队情况表格对话框 -->\r\n    <el-dialog\r\n      title=\"当前排队情况\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"70%\">\r\n      <el-table\r\n        :data=\"waitingQueueData\"\r\n        style=\"width: 100%\">\r\n        <el-table-column\r\n          prop=\"userId\"\r\n          label=\"用户ID\"\r\n          width=\"100\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"queueNumber\"\r\n          label=\"排队号码\"\r\n          width=\"120\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"mode\"\r\n          label=\"充电模式\"\r\n          width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.mode === 'FAST' ? '快充' : '慢充' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"amount\"\r\n          label=\"充电量(kWh)\"\r\n          width=\"120\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"queueJoinTime\"\r\n          label=\"排队时间\"\r\n          width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDateTime(scope.row.queueJoinTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"status\"\r\n          label=\"状态\"\r\n          width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            {{ getStatusText(scope.row.status) }}\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n\r\n    <!-- 修改充电请求对话框 -->\r\n    <el-dialog\r\n      title=\"修改充电请求\"\r\n      :visible.sync=\"modifyDialogVisible\"\r\n      width=\"30%\">\r\n      <el-form :model=\"modifyForm\" label-width=\"100px\">\r\n        <el-form-item label=\"充电模式\">\r\n          <el-select v-model=\"modifyForm.mode\" placeholder=\"请选择充电模式\">\r\n            <el-option\r\n              v-for=\"item in modeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"充电量(kWh)\">\r\n          <el-input-number \r\n            v-model=\"modifyForm.amount\" \r\n            :min=\"0\" \r\n            :precision=\"1\"\r\n            :step=\"0.5\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"modifyDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleModify\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getQueueNumber, getWaitingQueue, getAheadNumber, modifyChargingMode, modifyChargingAmount } from '@/api/schedule'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'QueueStatus',\r\n  data() {\r\n    return {\r\n      queueInfo: {\r\n        mode:'',\r\n        waitingCount: 0,\r\n        queueNumber: '',\r\n        amount: 0\r\n      },\r\n      timer: null,\r\n      dialogVisible: false,\r\n      waitingQueueData: [],\r\n      modifyDialogVisible: false,\r\n      modifyForm: {\r\n        mode: '',\r\n        amount: 0\r\n      },\r\n      modeOptions: [\r\n        { label: '快充', value: 'FAST' },\r\n        { label: '慢充', value: 'SLOW' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['userId'])\r\n  },\r\n  created() {\r\n    this.fetchQueueInfo()\r\n    // 每1秒刷新一次排队信息\r\n    this.timer = setInterval(this.fetchQueueInfo, 1000)\r\n  },\r\n  beforeDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchQueueInfo() {\r\n      try {\r\n        if (!this.userId) {\r\n          this.$message.error('用户未登录')\r\n          return\r\n        }\r\n        const response1 = await getQueueNumber(this.userId)\r\n        if (response1.code === 200) {\r\n          // 如果返回null，说明没有排队信息\r\n          if (response1.data === null) {\r\n            this.queueInfo = null\r\n          } else {\r\n            this.queueInfo.queueNumber = response1.data\r\n            // 获取前车等待数量\r\n            const response2 = await getAheadNumber(this.userId)\r\n            if (response2.code === 200) {\r\n              this.queueInfo.waitingCount = response2.data\r\n            } else {\r\n              this.$message.error(response2.message || '获取前车等待数量失败')\r\n            }\r\n          }\r\n        } else {\r\n          this.$message.error(response1.message || '获取排队信息失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取排队信息失败：' + error.message)\r\n      }\r\n    },\r\n    goToChargingRequest() {\r\n      this.modifyDialogVisible = true\r\n      // 初始化表单数据\r\n      this.modifyForm = {\r\n        mode: this.queueInfo.mode,\r\n        amount: this.queueInfo.amount\r\n      }\r\n    },\r\n    cancelQueue() {\r\n      this.$confirm('确认取消排队吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          // 这里应该调用API取消排队\r\n          await new Promise(resolve => setTimeout(resolve, 1000))\r\n          this.queueInfo = null\r\n          this.$message.success('已取消排队')\r\n        } catch (error) {\r\n          this.$message.error('取消失败：' + error.message)\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    async getWaitingQueue() {\r\n      try {\r\n        const response = await getWaitingQueue()\r\n        if (response.code === 200) {\r\n          this.waitingQueueData = response.data\r\n          this.dialogVisible = true\r\n        } else {\r\n          this.$message.error(response.message || '获取排队情况失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取排队情况失败：' + error.message)\r\n      }\r\n    },\r\n    formatDateTime(dateTimeStr) {\r\n      if (!dateTimeStr) return ''\r\n      const date = new Date(dateTimeStr)\r\n      return date.toLocaleString()\r\n    },\r\n    getStatusText(status) {\r\n      const statusMap = {\r\n        'WAITING_IN_WAITING_AREA': '等候区等待',\r\n        'CHARGING': '充电中',\r\n        'COMPLETED': '已完成',\r\n        'CANCELLED': '已取消'\r\n      }\r\n      return statusMap[status] || status\r\n    },\r\n    async handleModify() {\r\n      try {\r\n        // 修改充电模式\r\n        if (this.modifyForm.mode !== this.queueInfo.mode) {\r\n          const modeResponse = await modifyChargingMode({\r\n            userId: this.userId,\r\n            mode: this.modifyForm.mode\r\n          })\r\n          if (modeResponse.code === 200) {\r\n            this.queueInfo.mode = this.modifyForm.mode\r\n            this.$message.success('充电模式修改成功')\r\n          } else {\r\n            this.$message.error(modeResponse.message || '充电模式修改失败')\r\n            return\r\n          }\r\n        }\r\n\r\n        // 修改充电量\r\n        if (this.modifyForm.amount !== this.queueInfo.amount) {\r\n          const amountResponse = await modifyChargingAmount({\r\n            userId: this.userId,\r\n            requestAmount: this.modifyForm.amount\r\n          })\r\n          if (amountResponse.code === 200) {\r\n            this.queueInfo.amount = this.modifyForm.amount\r\n            this.$message.success('充电量修改成功')\r\n          } else {\r\n            this.$message.error(amountResponse.message || '充电量修改失败')\r\n            return\r\n          }\r\n        }\r\n\r\n        this.modifyDialogVisible = false\r\n      } catch (error) {\r\n        this.$message.error('修改失败：' + error.message)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.queue-status-container {\r\n  padding: 20px;\r\n}\r\n.queue-info {\r\n  text-align: center;\r\n}\r\n.queue-number {\r\n  margin-bottom: 20px;\r\n}\r\n.number {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n  margin: 20px 0;\r\n}\r\n.queue-details {\r\n  text-align: left;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n.detail-item {\r\n  margin: 15px 0;\r\n  font-size: 16px;\r\n}\r\n.label {\r\n  color: #606266;\r\n  margin-right: 10px;\r\n}\r\n.value {\r\n  color: #303133;\r\n  font-weight: bold;\r\n}\r\n.queue-actions {\r\n  margin-top: 20px;\r\n}\r\n</style> "]}]}