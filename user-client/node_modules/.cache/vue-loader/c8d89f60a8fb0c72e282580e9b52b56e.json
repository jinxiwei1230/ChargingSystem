{"remainingRequest":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git_project\\ChargingSystem\\user-client\\src\\views\\Register.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\git_project\\ChargingSystem\\user-client\\src\\views\\Register.vue","mtime":1749027642269},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749027024845},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1749027026730},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749027024845},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1749027027600}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIGV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAnUmVnaXN0ZXInLA0KICAgIGRhdGEoKSB7DQogICAgICBjb25zdCB2YWxpZGF0ZUNvbmZpcm1QYXNzd29yZCA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsNCiAgICAgICAgaWYgKHZhbHVlICE9PSB0aGlzLnJlZ2lzdGVyRm9ybS5wYXNzd29yZCkgew0KICAgICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign5Lik5qyh6L6T5YWl55qE5a+G56CB5LiN5LiA6Ie0JykpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgY2FsbGJhY2soKQ0KICAgICAgICB9DQogICAgICB9DQogICAgICANCiAgICAgIHJldHVybiB7DQogICAgICAgIHJlZ2lzdGVyRm9ybTogew0KICAgICAgICAgIHVzZXJuYW1lOiAnJywNCiAgICAgICAgICBwYXNzd29yZDogJycsDQogICAgICAgICAgY29uZmlybVBhc3N3b3JkOiAnJw0KICAgICAgICB9LA0KICAgICAgICBydWxlczogew0KICAgICAgICAgIHVzZXJuYW1lOiBbDQogICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl55So5oi35ZCNJywgdHJpZ2dlcjogJ2JsdXInIH0sDQogICAgICAgICAgICB7IG1pbjogMywgbWF4OiAyMCwgbWVzc2FnZTogJ+mVv+W6puWcqCAzIOWIsCAyMCDkuKrlrZfnrKYnLCB0cmlnZ2VyOiAnYmx1cicgfQ0KICAgICAgICAgIF0sDQogICAgICAgICAgcGFzc3dvcmQ6IFsNCiAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXlr4bnoIEnLCB0cmlnZ2VyOiAnYmx1cicgfSwNCiAgICAgICAgICAgIHsgbWluOiA2LCBtZXNzYWdlOiAn5a+G56CB6ZW/5bqm5LiN6IO95bCP5LqONuS9jScsIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgICAgXSwNCiAgICAgICAgICBjb25maXJtUGFzc3dvcmQ6IFsNCiAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7flho3mrKHovpPlhaXlr4bnoIEnLCB0cmlnZ2VyOiAnYmx1cicgfSwNCiAgICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZUNvbmZpcm1QYXNzd29yZCwgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgICBdDQogICAgICAgIH0sDQogICAgICAgIGxvYWRpbmc6IGZhbHNlDQogICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICBoYW5kbGVSZWdpc3RlcigpIHsNCiAgICAgICAgdGhpcy4kcmVmcy5yZWdpc3RlckZvcm0udmFsaWRhdGUoYXN5bmMgdmFsaWQgPT4gew0KICAgICAgICAgIGlmICh2YWxpZCkgew0KICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQ0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgLy8g6L+Z6YeM5bqU6K+l6LCD55SoQVBJ6L+b6KGM5rOo5YaMDQogICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSkNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfms6jlhozmiJDlip8nKQ0KICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2xvZ2luJykNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+azqOWGjOWksei0pe+8micgKyBlcnJvci5tZXNzYWdlKQ0KICAgICAgICAgICAgfSBmaW5hbGx5IHsNCiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICB9LA0KICAgICAgZ29Ub0xvZ2luKCkgew0KICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2xvZ2luJykNCiAgICAgIH0NCiAgICB9DQogIH0NCiAg"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"register-container\">\r\n      <el-card class=\"register-card\">\r\n        <div slot=\"header\">\r\n          <h2>智能充电桩系统 - 用户注册</h2>\r\n        </div>\r\n        <el-form \r\n          :model=\"registerForm\" \r\n          :rules=\"rules\" \r\n          ref=\"registerForm\" \r\n          label-width=\"80px\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input \r\n              v-model=\"registerForm.username\" \r\n              placeholder=\"请输入用户名\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input \r\n              v-model=\"registerForm.password\" \r\n              type=\"password\" \r\n              placeholder=\"请输入密码\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n            <el-input \r\n              v-model=\"registerForm.confirmPassword\" \r\n              type=\"password\" \r\n              placeholder=\"请再次输入密码\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleRegister\" :loading=\"loading\">\r\n              注册\r\n            </el-button>\r\n            <el-button @click=\"goToLogin\">返回登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Register',\r\n    data() {\r\n      const validateConfirmPassword = (rule, value, callback) => {\r\n        if (value !== this.registerForm.password) {\r\n          callback(new Error('两次输入的密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      \r\n      return {\r\n        registerForm: {\r\n          username: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' },\r\n            { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' },\r\n            { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n          ],\r\n          confirmPassword: [\r\n            { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n            { validator: validateConfirmPassword, trigger: 'blur' }\r\n          ]\r\n        },\r\n        loading: false\r\n      }\r\n    },\r\n    methods: {\r\n      handleRegister() {\r\n        this.$refs.registerForm.validate(async valid => {\r\n          if (valid) {\r\n            this.loading = true\r\n            try {\r\n              // 这里应该调用API进行注册\r\n              await new Promise(resolve => setTimeout(resolve, 1000))\r\n              this.$message.success('注册成功')\r\n              this.$router.push('/login')\r\n            } catch (error) {\r\n              this.$message.error('注册失败：' + error.message)\r\n            } finally {\r\n              this.loading = false\r\n            }\r\n          }\r\n        })\r\n      },\r\n      goToLogin() {\r\n        this.$router.push('/login')\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .register-container {\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f5f7fa;\r\n  }\r\n  .register-card {\r\n    width: 400px;\r\n  }\r\n  </style> "]}]}