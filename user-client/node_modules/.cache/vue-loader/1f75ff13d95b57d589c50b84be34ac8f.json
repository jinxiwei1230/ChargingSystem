{"remainingRequest":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git_project\\ChargingSystem\\user-client\\src\\views\\Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css","dependencies":[{"path":"D:\\git_project\\ChargingSystem\\user-client\\src\\views\\Register.vue","mtime":1749027642269},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1749027025599},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1749027028291},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\postcss-loader\\src\\index.js","mtime":1749027026725},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749027024845},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1749027027600}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yZWdpc3Rlci1jb250YWluZXIgewogIGhlaWdodDogMTAwdmg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7Cn0KLnJlZ2lzdGVyLWNhcmQgewogIHdpZHRoOiA0MDBweDsKfQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"register-container\">\r\n      <el-card class=\"register-card\">\r\n        <div slot=\"header\">\r\n          <h2>智能充电桩系统 - 用户注册</h2>\r\n        </div>\r\n        <el-form \r\n          :model=\"registerForm\" \r\n          :rules=\"rules\" \r\n          ref=\"registerForm\" \r\n          label-width=\"80px\">\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input \r\n              v-model=\"registerForm.username\" \r\n              placeholder=\"请输入用户名\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input \r\n              v-model=\"registerForm.password\" \r\n              type=\"password\" \r\n              placeholder=\"请输入密码\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n            <el-input \r\n              v-model=\"registerForm.confirmPassword\" \r\n              type=\"password\" \r\n              placeholder=\"请再次输入密码\">\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleRegister\" :loading=\"loading\">\r\n              注册\r\n            </el-button>\r\n            <el-button @click=\"goToLogin\">返回登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Register',\r\n    data() {\r\n      const validateConfirmPassword = (rule, value, callback) => {\r\n        if (value !== this.registerForm.password) {\r\n          callback(new Error('两次输入的密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      \r\n      return {\r\n        registerForm: {\r\n          username: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' },\r\n            { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' },\r\n            { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n          ],\r\n          confirmPassword: [\r\n            { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n            { validator: validateConfirmPassword, trigger: 'blur' }\r\n          ]\r\n        },\r\n        loading: false\r\n      }\r\n    },\r\n    methods: {\r\n      handleRegister() {\r\n        this.$refs.registerForm.validate(async valid => {\r\n          if (valid) {\r\n            this.loading = true\r\n            try {\r\n              // 这里应该调用API进行注册\r\n              await new Promise(resolve => setTimeout(resolve, 1000))\r\n              this.$message.success('注册成功')\r\n              this.$router.push('/login')\r\n            } catch (error) {\r\n              this.$message.error('注册失败：' + error.message)\r\n            } finally {\r\n              this.loading = false\r\n            }\r\n          }\r\n        })\r\n      },\r\n      goToLogin() {\r\n        this.$router.push('/login')\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .register-container {\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f5f7fa;\r\n  }\r\n  .register-card {\r\n    width: 400px;\r\n  }\r\n  </style> "]}]}