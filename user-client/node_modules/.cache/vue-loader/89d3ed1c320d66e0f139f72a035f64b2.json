{"remainingRequest":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git_project\\ChargingSystem\\user-client\\src\\views\\ChargingDetails.vue?vue&type=style&index=0&id=66e35ec7&scoped=true&lang=css","dependencies":[{"path":"D:\\git_project\\ChargingSystem\\user-client\\src\\views\\ChargingDetails.vue","mtime":1749311366733},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1749209591407},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1749209591734},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\postcss-loader\\src\\index.js","mtime":1749209590887},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749209592798},{"path":"D:\\git_project\\ChargingSystem\\user-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1749209591090}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jaGFyZ2luZy1kZXRhaWxzLWNvbnRhaW5lciB7CiAgcGFkZGluZzogMjBweDsKfQouaGVhZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5oZWFkZXItYWN0aW9ucyB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5wYWdpbmF0aW9uLWNvbnRhaW5lciB7CiAgbWFyZ2luLXRvcDogMjBweDsKICB0ZXh0LWFsaWduOiByaWdodDsKfQouZGV0YWlsLWNvbnRlbnQgewogIHBhZGRpbmc6IDIwcHg7Cn0KLmRldGFpbC1ncmlkIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7CiAgZ2FwOiAxNXB4OwogIG1hcmdpbi1ib3R0b206IDMwcHg7Cn0KLmRldGFpbC1pdGVtIHsKICBtYXJnaW46IDEwcHggMDsKICBmb250LXNpemU6IDE0cHg7Cn0KLmxhYmVsIHsKICBjb2xvcjogIzYwNjI2NjsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KLnZhbHVlIHsKICBjb2xvcjogIzMwMzEzMzsKICBmb250LXdlaWdodDogYm9sZDsKfQouZGV0YWlsLWxpc3QgewogIG1hcmdpbi10b3A6IDIwcHg7Cn0KLmVsLXRhZyB7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["ChargingDetails.vue"],"names":[],"mappings":";AA0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChargingDetails.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"charging-details-container\">\n    <el-card>\n      <div slot=\"header\" class=\"header\">\n        <span>充电订单列表</span>\n        <div class=\"header-actions\">\n          <el-select v-model=\"orderStatus\" placeholder=\"订单状态\" style=\"width: 120px; margin-right: 10px\">\n            <el-option label=\"全部\" value=\"\"></el-option>\n            <el-option label=\"已创建\" value=\"CREATED\"></el-option>\n            <el-option label=\"充电中\" value=\"CHARGING\"></el-option>\n            <el-option label=\"已完成\" value=\"COMPLETED\"></el-option>\n            <el-option label=\"已取消\" value=\"CANCELLED\"></el-option>\n            <el-option label=\"故障\" value=\"FAULTED\"></el-option>\n          </el-select>\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            :picker-options=\"pickerOptions\"\n            @change=\"handleDateChange\">\n          </el-date-picker>\n          <el-input\n            v-model=\"searchKeyword\"\n            placeholder=\"搜索订单编号\"\n            style=\"width: 200px; margin-left: 10px\"\n            @input=\"handleSearch\">\n          </el-input>\n        </div>\n      </div>\n      \n      <el-table\n        :data=\"ordersList\"\n        style=\"width: 100%\"\n        v-loading=\"loading\"\n        @row-click=\"showOrderDetail\">\n        <el-table-column\n          prop=\"orderId\"\n          label=\"订单编号\"\n          width=\"180\">\n        </el-table-column>\n        <el-table-column\n          prop=\"pileId\"\n          label=\"充电桩编号\"\n          width=\"120\">\n        </el-table-column>\n        <el-table-column\n          prop=\"carId\"\n          label=\"车牌号\"\n          width=\"120\">\n        </el-table-column>\n        <el-table-column\n          prop=\"orderStatus\"\n          label=\"订单状态\"\n          width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.orderStatus)\">\n              {{ getStatusText(scope.row.orderStatus) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"totalKwh\"\n          label=\"充电量(度)\"\n          width=\"100\">\n        </el-table-column>\n        <el-table-column\n          prop=\"totalDuration\"\n          label=\"充电时长(分钟)\"\n          width=\"120\">\n        </el-table-column>\n        <el-table-column\n          prop=\"totalFee\"\n          label=\"总费用(元)\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.totalFee ? '¥' + scope.row.totalFee : '-' }}\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"startTime\"\n          label=\"开始时间\"\n          width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDateTime(scope.row.startTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"endTime\"\n          label=\"结束时间\"\n          width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDateTime(scope.row.endTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column\n          label=\"操作\"\n          width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-button \n              type=\"text\" \n              size=\"small\"\n              @click.stop=\"showOrderDetail(scope.row)\">\n              查看详单\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"currentPage\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 订单详情对话框 -->\n    <el-dialog\n      title=\"订单详情\"\n      :visible.sync=\"orderDialogVisible\"\n      width=\"60%\">\n      <div v-if=\"currentOrder\" class=\"detail-content\">\n        <h3>基本信息</h3>\n        <div class=\"detail-grid\">\n        <div class=\"detail-item\">\n            <span class=\"label\">订单编号：</span>\n            <span class=\"value\">{{ currentOrder.orderId }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">充电桩编号：</span>\n            <span class=\"value\">{{ currentOrder.pileId }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">车牌号：</span>\n            <span class=\"value\">{{ currentOrder.carId }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">订单状态：</span>\n            <span class=\"value\">\n              <el-tag :type=\"getStatusType(currentOrder.orderStatus)\">\n                {{ getStatusText(currentOrder.orderStatus) }}\n              </el-tag>\n            </span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">充电电量：</span>\n            <span class=\"value\">{{ currentOrder.totalKwh }}度</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">充电时长：</span>\n            <span class=\"value\">{{ currentOrder.totalDuration }}分钟</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">充电费用：</span>\n            <span class=\"value\">¥{{ currentOrder.totalChargeFee || '-' }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">服务费用：</span>\n            <span class=\"value\">¥{{ currentOrder.totalServiceFee || '-' }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">总费用：</span>\n            <span class=\"value\">¥{{ currentOrder.totalFee || '-' }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">开始时间：</span>\n            <span class=\"value\">{{ formatDateTime(currentOrder.startTime) }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">结束时间：</span>\n            <span class=\"value\">{{ formatDateTime(currentOrder.endTime) }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">创建时间：</span>\n            <span class=\"value\">{{ formatDateTime(currentOrder.createTime) }}</span>\n          </div>\n        </div>\n        \n        <div v-if=\"orderDetails.length > 0\" class=\"detail-list\">\n          <h3>详单列表</h3>\n          <el-table :data=\"orderDetails\" border>\n            <el-table-column prop=\"periodSeq\" label=\"时段序号\" width=\"100\"></el-table-column>\n            <el-table-column prop=\"periodType\" label=\"时段类型\" width=\"120\">\n              <template slot-scope=\"scope\">\n                {{ getPeriodTypeText(scope.row.periodType) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"开始时间\" width=\"180\">\n              <template slot-scope=\"scope\">\n                {{ formatDateTime(scope.row.startTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"结束时间\" width=\"180\">\n              <template slot-scope=\"scope\">\n                {{ formatDateTime(scope.row.endTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"duration\" label=\"时长(分钟)\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"kwh\" label=\"充电量(度)\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"chargeRate\" label=\"充电费率\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"serviceRate\" label=\"服务费率\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"chargeFee\" label=\"充电费(元)\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"serviceFee\" label=\"服务费(元)\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"subTotal\" label=\"小计(元)\" width=\"120\"></el-table-column>\n          </el-table>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getUserOrders, getOrderInfo, getOrderDetailList } from '@/api/user-bill'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ChargingDetails',\n  data() {\n    return {\n      loading: false,\n      dateRange: [],\n      searchKeyword: '',\n      orderStatus: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      ordersList: [],\n      allOrders: [],\n      orderDialogVisible: false,\n      currentOrder: null,\n      orderDetails: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['userId'])\n  },\n  methods: {\n    getPeriodTypeText(type) {\n      const typeMap = {\n        'PEAK': '峰时',\n        'STANDARD': '平时',\n        'VALLEY': '谷时'\n      }\n      return typeMap[type] || type\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'CREATED': '已创建',\n        'CHARGING': '充电中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消',\n        'FAULTED': '故障'\n      }\n      return statusMap[status] || status\n    },\n    getStatusType(status) {\n      const typeMap = {\n        'CREATED': 'info',\n        'CHARGING': 'success',\n        'COMPLETED': '',\n        'CANCELLED': 'danger',\n        'FAULTED': 'warning'\n      }\n      return typeMap[status] || ''\n    },\n    formatDateTime(dateTimeStr) {\n      if (!dateTimeStr) return '-'\n      const date = new Date(dateTimeStr)\n      return date.toLocaleString()\n    },\n    handleDateChange() {\n      this.applyFilters()\n    },\n    handleSearch() {\n      this.applyFilters()\n    },\n    handleSizeChange(val) {\n      this.pageSize = val\n      this.applyFilters()\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val\n      this.applyFilters()\n    },\n    async fetchOrders() {\n      this.loading = true\n      try {\n        if (!this.userId) {\n          this.$message.error('用户未登录')\n          return\n        }\n        \n        const params = {\n          page: this.currentPage,\n          size: this.pageSize\n        }\n        \n        if (this.orderStatus) {\n          params.status = this.orderStatus\n        }\n        \n        if (this.dateRange && this.dateRange.length === 2) {\n          params.startDate = this.formatDate(this.dateRange[0])\n          params.endDate = this.formatDate(this.dateRange[1])\n        }\n        \n        const response = await getUserOrders(this.userId, params)\n        if (response.code === 200) {\n          this.ordersList = response.data.records\n          this.total = response.data.total\n        } else {\n          this.$message.error(response.message || '获取订单列表失败')\n        }\n      } catch (error) {\n        this.$message.error('获取订单列表失败：' + error.message)\n      } finally {\n        this.loading = false\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date)\n      let month = '' + (d.getMonth() + 1)\n      let day = '' + d.getDate()\n      const year = d.getFullYear()\n      \n      if (month.length < 2) month = '0' + month\n      if (day.length < 2) day = '0' + day\n      \n      return [year, month, day].join('-')\n    },\n    applyFilters() {\n      this.fetchOrders()\n    },\n    async showOrderDetail(row) {\n      this.loading = true\n      try {\n        const [orderResponse, detailsResponse] = await Promise.all([\n          getOrderInfo(row.orderId),\n          getOrderDetailList(row.orderId)\n        ])\n        \n        if (orderResponse.code === 200) {\n          this.currentOrder = orderResponse.data\n        } else {\n          this.$message.error(orderResponse.message || '获取订单详情失败')\n        }\n        \n        if (detailsResponse.code === 200) {\n          this.orderDetails = detailsResponse.data\n        } else {\n          this.orderDetails = []\n        }\n        \n        this.orderDialogVisible = true\n      } catch (error) {\n        this.$message.error('获取订单详情失败：' + error.message)\n      } finally {\n        this.loading = false\n      }\n    }\n  },\n  created() {\n    this.fetchOrders()\n  }\n}\n</script>\n\n<style scoped>\n.charging-details-container {\n  padding: 20px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.header-actions {\n  display: flex;\n  align-items: center;\n}\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n.detail-content {\n  padding: 20px;\n}\n.detail-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n  margin-bottom: 30px;\n}\n.detail-item {\n  margin: 10px 0;\n  font-size: 14px;\n}\n.label {\n  color: #606266;\n  margin-right: 10px;\n}\n.value {\n  color: #303133;\n  font-weight: bold;\n}\n.detail-list {\n  margin-top: 20px;\n}\n.el-tag {\n  margin-right: 10px;\n}\n</style> "]}]}